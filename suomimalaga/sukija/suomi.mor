# Suomi-malaga, suomen kielen muoto-opin kuvaus.
#
# Tekijänoikeus © 2006-2008 Hannu Väisänen (Etunimi.Sukunimi@joensuu.fi)
#
# Tämä ohjelma on vapaa; tätä ohjelmaa on sallittu levittää
# edelleen ja muuttaa GNU yleisen lisenssin (GPL lisenssin)
# ehtojen mukaan sellaisina kuin Free Software Foundation
# on ne julkaissut; joko Lisenssin version 2, tai (valinnan
# mukaan) minkä tahansa myöhemmän version mukaisesti.
#
# Tätä ohjelmaa levitetään siinä toivossa, että se olisi
# hyödyllinen, mutta ilman mitään takuuta; ilman edes
# hiljaista takuuta kaupallisesti hyväksyttävästä laadusta tai
# soveltuvuudesta tiettyyn tarkoitukseen. Katso GPL
# lisenssistä lisää yksityiskohtia.
#
# Tämän ohjelman mukana pitäisi tulla kopio GPL
# lisenssistä; jos näin ei ole, kirjoita osoitteeseen Free
# Software Foundation Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Tämän ohjeman linkittäminen staattisesti tai dynaamisesti
# muihin moduuleihin on ohjelmaan perustuvan teoksen
# tekemistä, joka on siis GPL lisenssin ehtojen alainen.
#
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to the
# Free Software Foundation, Inc., 59 Temple Place -  Suite 330, Boston, MA
# 02111-1307 USA.
#
# Linking this program statically or dynamically with other modules is
# making a combined work based on this program.  Thus, the terms and
# conditions of the GNU General Public License cover the whole
# combination.

initial <>, rules laatusana,
                  nimi_laatusana,
                  lukusana,
                  sanan_alku;

include "suomi.inc";

define @teonsana := <teonsana, kieltosana>;

define @ehtotapa := <ehtotapa, ehtotapa_ttA, ehtotapa_tA>;

define @mahtotapa := <mahtotapa_le, mahtotapa_ne, mahtotapa_re, mahtotapa_se,
                      mahtotapa_le_kielto, mahtotapa_ne_kielto,
                      mahtotapa_re_kielto, mahtotapa_se_kielto,
                      mahtotapa_ttA, mahtotapa_tA>;

define @käskytapa := <käskytapa, käskytapa_kielto, käskytapa_ttA,
                      käskytapa_tA>;

define @nimitapa_1 := <nimitapa_1_A,  nimitapa_1_dA, nimitapa_1_lA,
                       nimitapa_1_nA, nimitapa_1_rA, nimitapa_1_tA>;
define @nimitapa_2 := <nimitapa_2, nimitapa_2_ttA, nimitapa_2_tA>;
define @nimitapa_3 := <nimitapa_3, nimitapa_3_saama, nimitapa_3_ttA, nimitapa_3_tA>;

define @teonsanan_taivutusmuodot :=
       @tositapa + @ehtotapa + @mahtotapa + @käskytapa +
       @nimitapa_1 + @nimitapa_2 + @nimitapa_3 +
       @laatutapa_1 + @laatutapa_2;


define @voittoaste := <voittoaste>;
define @yliaste    := <yliaste>;

define @johdin_U := <johdin_U_arvelu>;

define @johdin_teonsanasta :=
       <johdin_tOn, johdin_UUs, johdin_Us, johdin_ntA, johdin_nti,
        johdin_Us_ksen, johdin_vA, johdin_vE, johdin_vAinen,
        johdin_lAinen, johdin_mAinen, johdin_llinen, johdin_ittAin,
        johdin_nA, johdin_O, johdin_Os,
        johdin_tAr>  # Näyttelijätär.
       + @johdin_U
       + @johdin_jA
       + @johdin_mA
       + @johdin_tAvA
       + @johdin_laatutapa;

define @johdin_nimisanasta := <johdin_ittAin, johdin_inen,
                               johdin_tOn, johdin_tAr, johdin_Us, johdin_UUs>
                              + @johdin_jA;

define @johdin_laatusanasta := <johdin_nlainen, johdin_Us, johdin_UUs>;

define @johdin := @johdin_teonsanasta + @johdin_nimisanasta + @johdin_laatusanasta;


define @tekijämuodot := @kestämän_tekijäpääte + @tositavan_tekijäpääte_4 + @kertoman_tekijäpääte
                        + @ehtotapa + @mahtotapa + @käskytapa;

# Neljäs nimitapa katsotaan teonsanasta johdetuksi nimisanaksi.
define @nimitavat := @nimitapa_1 + @nimitapa_2 + @nimitapa_3 + <nimitapa_5>;
#define @nimitavat := @nimitapa_1 + @nimitapa_2 + @nimitapa_3 + <nimitapa_4, nimitapa_5>;

define @laatutavat := @laatutapa_1 + @laatutapa_2;



# Sääntö sanan_alku on muokattu Harri Pitkäsen Voikko-versiosta.
#
combi_rule sanan_alku ($vasen, $oikea, $sana):
####define $profile := transmit ("sanan_alku ($vasen, $oikea, $sana):");
#  define $a := transmit ($vasen);
#  define $b := transmit ($oikea);
#  define $c := transmit ($sana);

  define $res := <[alku: $sana] + $oikea>;

  if $oikea.luokka = lyhenne then
    if (kaksoispiste in $oikea.jatko) then
      result $res, rules kaksoispiste;
    end;
    if (tavuviiva in $oikea.jatko) then
      result $res, rules tavuviiva;
    end;
    if (loppu in $oikea.jatko) then
      result $res, rules loppu;
    end;
  elseif $oikea.luokka in <huudahdussana, sidesana> then
    if (tavuviiva in $oikea.jatko) then
      result $res, rules tavuviiva;
    end;
    if (loppu in $oikea.jatko) then
      result $res, rules loppu;
    end;
    result $res, rules liitesana;
  elseif $oikea.luokka = etuliite then
if (1 = 0) then
    if (kieltosana in $oikea.jatko) then
      result $res, rules kieltosana;
    end;
    if (etuliite in $oikea.jatko) then
      result $res, rules etuliite;
    end;
    if (lukusana in $oikea.jatko) then
      result $res, rules lukusana;
    end;
    result $res, rules yhdyssana;
else
    if (kieltosana in $oikea.jatko) then
      result $res, rules kieltosana;
    end;
    if (nimisana in $oikea.jatko) then
      result $res, rules nimisana, teonsanasta_johdettu_nimisana,
                         paikannimen_ja_sukunimen_lainen_johdos;
    end;
    if (laatusana in $oikea.jatko) then
      result $res, rules laatusana, teonsanasta_johdettu_laatusana;
    end;
    if (nimi_laatusana in $oikea.jatko) then
      result $res, rules nimi_laatusana;
      if (not (nimisana in $oikea.jatko)) then
        result $res, rules nimisana, teonsanasta_johdettu_nimisana;
      end;
      if (not (laatusana in $oikea.jatko)) then
        result $res, rules laatusana, teonsanasta_johdettu_laatusana;
      end;
    end;
#    if (teonsanan_johdoksen_etuliite in $oikea.jatko) then
#      result $r, rules teonsanasta_johdettu_nimisana,
#                       teonsanasta_johdettu_laatusana;
#    end;
    if (teonsana in $oikea.jatko) then
      result $res, rules teonsana;
    end;
    if (etuliite in $oikea.jatko) then
      result $res, rules etuliite;
    end;
    if (lukusana in $oikea.jatko) then
      result $res, rules lukusana;
    end;
    # Tavuviiva on aina jatkossa eli sitä ei tarvitse testata.
    result $res, rules tavuviiva;
end;
  elseif ($oikea.luokka = teonsana) then
    if (liitesana in $oikea.jatko) then
      result $res, rules liitesana;
    end;
    if (loppu in  $oikea.jatko) then
      result $res, rules loppu;
    end;
    if (tavuviiva in  $oikea.jatko) then
      result $res, rules tavuviiva;
    end;
#    if (@tekijämuodot * $oikea.jatko /= <>) then
#      result $res, rules tekijämuodot;
#    end;
#    if (@nimitavat * $oikea.jatko /= <>) then
#      result $res, rules nimitavat;
#    end;
#    if (@laatutavat * $oikea.jatko /= <>) then
#      result $res, rules laatutavat;
#    end;
#    result $res, rules teonsanan_johdos_nimisana, teonsanan_johdos_laatusana;
# Tämä on nopeampi kuin kaikki erikseen!
    result $res, rules tekijämuodot, nimitavat, laatutavat,
                       teonsanan_johdos_nimisana, teonsanan_johdos_laatusana;
  elseif $oikea.luokka = kieltosana then
    result $res, rules liitesana, liitesana_kä, tavuviiva, loppu;
  elseif $oikea.luokka = asemosana then
    result $res,
           rules asemosanan_sijapääte, liitesana, tavuviiva, voitto_yliaste, loppu;
  elseif $oikea.luokka in <seikkasana, suhdesana> then
    if (loppu in $oikea.jatko) then
      result $res, rules loppu;
    end;
    if (liitesana in $oikea.jatko) then
      result $res, rules liitesana;
    end;
    if (omistusliite in $oikea.jatko) then
      result $res, rules omistusliite;
    end;
    if (tavuviiva in $oikea.jatko) then
      result $res, rules tavuviiva;
    end;
    result $res, rules sijapääte;
  elseif $oikea.luokka = nimisana then
#    ? $oikea.tiedot = nil or not ysj in $oikea.tiedot;
    if (tavuviiva in $oikea.jatko and not (yhdyssana in $oikea.jatko)) then
      result $res, rules tavuviiva;
    end;
    if (yhdyssana in $oikea.jatko) then
      result $res, rules yhdyssana;
    end;
    if (@nimisanasta_johdettu_laatusana * $oikea.jatko /= <>) then
      result $res, rules nimisanasta_johdettu_laatusana;
    end;
    if (@nimisanasta_johdettu_nimisana * $oikea.jatko /= <>) then
      result $res, rules nimisanasta_johdettu_nimisana;
    end;
    if (@nimi_laatusanan_johdin * $oikea.jatko /= <>) then
      result $res, rules nimi_laatusanan_johdin;
    end;
    if (omistusliite in $oikea.jatko) then
      result $res, rules omistusliite;
    end;
    if (liitesana in $oikea.jatko) then
      result $res, rules liitesana;
    end;
    if (loppu in $oikea.jatko) then
      result $res, rules loppu;
    end;
    result $res, rules sijapääte;
  elseif $oikea.luokka in @erisnimi then
    if (omistusliite in $oikea.jatko) then
      result $res, rules omistusliite;
    end;
    if (liitesana in $oikea.jatko) then
      result $res, rules liitesana;
    end;
    if (tavuviiva in $oikea.jatko) then
      result $res, rules tavuviiva;
    end;
    if (loppu in $oikea.jatko) then
      result $res, rules loppu;
    end;
    if ((johdin_lAinen in $oikea.jatko) and ($oikea.luokka in <paikannimi, sukunimi>)) then
      result $res, rules paikannimen_ja_sukunimen_lainen_johdin;
    end;
    result $res, rules erisnimen_sijapääte;
  end;
#define $b := transmit (<"c"> + <$oikea>);
#define $c := transmit (<"d"> + <$sana>);
  stop;
end;


combi_rule etuliite ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("etuliite ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = etuliite;

#define $a := transmit ($vasen);
#define $b := transmit (<$oikea> + <$sana>);

  define $i := $n - 1;

assert ($i = length($vasen));

  ? ($oikea.luokka in $vasen.$i.jatko);
  ? yhdyssana_oikein ($vasen, $oikea, $i);


  define $r := $vasen + <[alku: $sana] + $oikea>;

  if (kieltosana in $oikea.jatko) then
    result $r, rules kieltosana;
  end;
  if (nimisana in $oikea.jatko) then
    result $r, rules nimisana, teonsanasta_johdettu_nimisana,
                     paikannimen_ja_sukunimen_lainen_johdos;
  end;
  if (laatusana in $oikea.jatko) then
    result $r, rules laatusana, teonsanasta_johdettu_laatusana;
  end;
  if (nimi_laatusana in $oikea.jatko) then
    result $r, rules nimi_laatusana;
    if (not (nimisana in $oikea.jatko)) then
      result $r, rules nimisana, teonsanasta_johdettu_nimisana;
    end;
    if (not (laatusana in $oikea.jatko)) then
      result $r, rules laatusana, teonsanasta_johdettu_laatusana;
    end;
  end;
  if (teonsana in $oikea.jatko) then
    result $r, rules teonsana;
  end;
  if (etuliite in $oikea.jatko) then
    result $r, rules etuliite;
  end;
  if (lukusana in $oikea.jatko) then
    result $r, rules lukusana;
  end;

  # Tavuviiva on aina jatkossa eli sitä ei tarvitse testata.
  #
  result $r, rules tavuviiva;
end;


combi_rule nimisana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("nimisana ($vasen, $oikea, $sana, $n):");
  define $i := $n - 1;

#assert ($i = length($vasen));

  define $res := $vasen + <[alku: $sana] + $oikea>;

  # Esim. (koillis)puolitse, (maan)teitse, (sähkö)postitse.
  #
  if ($oikea.luokka = seikkasana and $oikea.tiedot /= nil and
      ys_perusosa in $oikea.tiedot and $vasen /= <>) then

    if (($vasen.$i.luokka = sijapääte and $vasen.$i.sija = omanto_n)
        or (($vasen.$i.perusmuoto /= nil)
            and (($vasen.$i.perusmuoto = $vasen.$i.alku)
                 or (($vasen.$i.perusmuoto matches ".*inen") and ($vasen.$i.alku matches ".+is") and
                     (not ($vasen.$i.luokka in <johdin_llinen, johdin_inen>)))))) then


      if (loppu in $oikea.jatko) then
        result $res, rules loppu;
      end;
      if (liitesana in $oikea.jatko) then
         result $res, rules liitesana;
      end;
      if (omistusliite in $oikea.jatko) then
        result $res, rules omistusliite;
      end;
      result $res, rules sijapääte;
    end;
  end;

  ? $oikea.luokka = nimisana;
##  ? $oikea.luokka in <nimisana, lukusana>;

#define $n1 := transmit (<"nimisana1"> + <$vasen.$i.jatko>);
#define $n2 := transmit (<"nimisana2"> + <$oikea.luokka>);
#define $n3 := transmit (<"nimisana3"> + <$sana>);
#define $n4 := transmit (<"nimisana4"> + <($oikea.luokka in $vasen.$i.jatko)>);

  ? (($oikea.luokka in $vasen.$i.jatko) or
     (teonsanan_johdoksen_etuliite in $vasen.$i.jatko) or
     ((nimisana in $vasen.$i.jatko) and ($oikea.luokka in @nimisana + @lukusana)));

  ? yhdyssana_oikein ($vasen, $oikea, $i);

  if (tavuviiva in $oikea.jatko and not (yhdyssana in $oikea.jatko)) then
    result $res, rules tavuviiva;
  end;
  if (yhdyssana in $oikea.jatko) then
    result $res, rules yhdyssana;
  end;
  if (@nimisanasta_johdettu_laatusana * $oikea.jatko /= <>) then
    result $res, rules nimisanasta_johdettu_laatusana;
  end;
  if (@nimisanasta_johdettu_nimisana * $oikea.jatko /= <>) then
    result $res, rules nimisanasta_johdettu_nimisana;
  end;
  if (@nimi_laatusanan_johdin * $oikea.jatko /= <>) then
    result $res, rules nimi_laatusanan_johdin;
  end;
  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;
  result $res, rules sijapääte;
end;


combi_rule laatusana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("laatusana ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = laatusana;

  define $i := $n - 1;

assert ($i = length($vasen));

#define $nimi := transmit (<"laatusana"> + <$vasen.$i.alku> + <$oikea> + <$sana>);
#define $n := transmit (<"luokka"> + <$vasen.$i.luokka>);

#  assert ($i greater 0);

  if ($i greater 0) then
    ? ($oikea.luokka in $vasen.$i.jatko);
    ? yhdyssana_oikein ($vasen, $oikea, $i);
  end;

#define $n := transmit (<$vasen> + <$oikea> + <$sana>);
#define $n1 := transmit ($vasen);
#define $n2 := transmit ($oikea);
#define $n3 := transmit ($sana);

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (@nimi_laatusanan_johdin * $oikea.jatko /= <>) then
    result $res, rules nimi_laatusanan_johdin;
  end;
  if (@voittoaste + @yliaste * $oikea.jatko /= <>) then
    result $res, rules voitto_yliaste;
  end;
  if (@laatusanasta_johdettu_nimisana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_nimisana;
  end;
  if (@laatusanasta_johdettu_laatusana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_laatusana;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;
  if (tavuviiva in $oikea.jatko and not (yhdyssana in $oikea.jatko)) then
    result $res, rules tavuviiva;
  end;
  if (yhdyssana in $oikea.jatko) then
    result $res, rules yhdyssana;
  end;
  result $res, rules sijapääte;
end;


combi_rule nimi_laatusana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("nimi_laatusana ($vasen, $oikea, $sana, $n):");
#define $n1 := transmit ($vasen);
#define $n2 := transmit ($oikea);
#define $n3 := transmit ($sana);

  ? $oikea.luokka = nimi_laatusana;
  define $i := $n - 1;

assert ($i = length($vasen));

#define $n4 := transmit ($oikea.luokka);

  if ($i greater 0) then
    ? (($oikea.luokka in $vasen.$i.jatko) or
       ((nimisana in $vasen.$i.jatko) and ($oikea.luokka in @nimisana + @lukusana)));
    ? yhdyssana_oikein ($vasen, $oikea, $i);
  end;

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if ((voittoaste in $oikea.jatko) or (yliaste in $oikea.jatko)) then
    result $res, rules voitto_yliaste;
  end;
  if (loppu in $oikea.jatko) then
     result $res, rules loppu;
  end;
  if (@nimi_laatusanan_johdin * $oikea.jatko /= <>) then
    result $res, rules nimi_laatusanan_johdin;
  end;
  if (@laatusanasta_johdettu_nimisana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_nimisana;
  end;
  if (@laatusanasta_johdettu_laatusana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_laatusana;
  end;
  if (@nimisanasta_johdettu_laatusana * $oikea.jatko /= <>) then
    result $res, rules nimisanasta_johdettu_laatusana;
  end;
  if (@nimisanasta_johdettu_nimisana * $oikea.jatko /= <>) then
    result $res, rules nimisanasta_johdettu_nimisana;
  end;
  if (tavuviiva in $oikea.jatko and not (yhdyssana in $oikea.jatko)) then
    result $res, rules tavuviiva;
  end;
  if (yhdyssana in $oikea.jatko) then
    result $res, rules yhdyssana;
  end;
  result $res, rules sijapääte;
end;


combi_rule asemosana ($vasen, $oikea, $sana):
####define $profile := transmit ("asemosana ($vasen, $oikea, $sana):");
  ? $oikea.luokka = asemosana;

#define $nimi := transmit (<"asemosana"> + <$oikea> + <$sana>);

  result $vasen + <[alku: $sana] + $oikea>,
         rules asemosanan_sijapääte, liitesana, tavuviiva, voitto_yliaste, loppu;
end;


combi_rule lyhennesääntö ($vasen, $oikea, $sana):
####define $profile := transmit ("lyhennesääntö ($vasen, $oikea, $sana):");
  ? $oikea.luokka in <lyhenne>;

#define $nimi := transmit (<"lyhennesääntö"> + <$vasen> + <$oikea> + <$sana>);

  result $vasen + <[alku: $sana] + $oikea>,
         rules kaksoispiste, tavuviiva, loppu;
end;


combi_rule apusana ($vasen, $oikea, $sana):
####define $profile := transmit ("apusana ($vasen, $oikea, $sana):");
  ? $oikea.luokka in <huudahdussana, sidesana>;

#define $nimi := transmit (<"apusana"> + <$oikea> + <$sana>);

  result $vasen + <[alku: $sana] + $oikea>,
         rules liitesana, tavuviiva, loppu;
end;


combi_rule kaksoispiste ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("kaksoispiste ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in <kaksoispiste>;

#define $nimi := transmit (<":"> + <$vasen> + <$oikea> + <$sana> + <length($vasen)>);

  result $vasen + <[alku: $sana] + $oikea + [äs: $vasen.($n-1).äs]>,
         rules kaksoispisteen_sijapääte;
end;


combi_rule tavuviiva ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("tavuviiva ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in <tavuviiva>;

  define $i := $n - 1 ;

  ? $oikea.luokka in $vasen.$i.jatko;

#define $nimi1 := transmit (<"tavuviiva1"> + <$vasen>);
#define $nimi2 := transmit (<"tavuviiva2"> + <$oikea>);
#define $nimi3 := transmit (<"tavuviiva3"> + <$sana>);

  define $res := $vasen + <[alku: $sana] + $oikea>;

  result $res, rules yhdyssana, asemosana, apusana, lyhennesääntö, erisnimi, loppu;
end;


# Tämä sääntö on muokattu Harri Pitkäsen Voikko-versiosta.
#
combi_rule kaksoispisteen_sijapääte ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("kaksoispisteen_sijapääte ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = sijapääte;
  ? $oikea.sija /= keinonto_n;

  define $edellinen := $vasen.($n-1);
  ? ($edellinen.äs = aä) or ($oikea.äs = aä) or ($edellinen.äs = $oikea.äs);

  if $oikea.äs = aä then $oikea.äs := $edellinen.äs; end;

  result $vasen + <[alku: $sana] + $oikea>,
         rules omistusliite, liitesana, loppu;
end;


define @sti_edeltäjä := <laatusana, nimi_laatusana, voittoaste, yliaste>
                        + @nimisanasta_johdettu_laatusana
                        + @laatusanasta_johdettu_laatusana
                        + @nimi_laatusanan_johdin
                        + @teonsanasta_johdettu_laatusana
                        + @lukusana + @laatutapa_1 + @laatutapa_2;

# Sijapääte, joka voi olla yhdyssanan alkuosassa.
#
#define @yhdyssanasija := <omanto_n,           # Talonpoika.
#                          omanto_en,
#                          omanto_ien,
#                          omanto_jen,
#                          omanto_in,          # Vanhempainloma.
#                          omanto_ten,         # Naistentanssit.
#                          omanto_iT,          # Hampaidenhoito, hampaittenhoito.
#                          sisätulento_hVn,    # Maahantulo, työhönotto.
#                          sisätulento_ihin>;  # Maihinnousu.

combi_rule sijapääte ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("sijapääte ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = sijapääte;

#define $nimi := transmit (<$vasen> + <$oikea> + <$sana>);

  define $edellinen := $vasen.($n-1);

  ? $oikea.sija in $edellinen.jatko;
  ? äs_ok ($edellinen,$oikea);

  ? ($oikea.sija /= sisätulento_Vn)  or sisätulento_Vn_oikein  ($oikea.sija, substring($edellinen.alku,1R), $sana);
  ? ($oikea.sija /= sisätulento_hVn) or sisätulento_hVn_oikein ($oikea.sija, substring($edellinen.alku,1R), $sana);

  if $oikea.äs = aä then $oikea.äs := $edellinen.äs; end;
  define $res := $vasen + <[alku: $sana] + $oikea>;

#define $a1 := transmit ($edellinen);
#define $b1 := transmit ($oikea);
#define $c1 := transmit ($sana);

  if (($oikea.sija = kerronto_sti) and ($edellinen.luokka in @sti_edeltäjä)) then
    result $res, rules liitesana, loppu;
  else
    if (omistusliite in $oikea.jatko) then
      result $res, rules omistusliite;
    end;
    if (liitesana in $oikea.jatko) then
      result $res, rules liitesana;
    end;
    if (tavuviiva in $oikea.jatko and not (yhdyssana in $oikea.jatko)) then
      result $res, rules tavuviiva;
    end;
    if (yhdyssana in $oikea.jatko) then
      result $res, rules yhdyssana;
    end;
    if (loppu in $oikea.jatko) then
      result $res, rules loppu;
    end;
  end;
end;


combi_rule asemosanan_sijapääte ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("asemosanan_sijapääte ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = sijapääte;

  define $edellinen := $vasen.($n-1);
  ? $oikea.sija in $edellinen.jatko;
  ? äs_ok ($edellinen,$oikea);

  ? ($oikea.sija /= sisätulento_Vn)  or sisätulento_Vn_oikein  ($oikea.sija, substring($edellinen.alku,1R), $sana);
  ? ($oikea.sija /= sisätulento_hVn) or sisätulento_hVn_oikein ($oikea.sija, substring($edellinen.alku,1R), $sana);

  if $oikea.äs = aä then $oikea.äs := $edellinen.äs; end;
  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (($oikea.sija = kerronto_sti) and ($edellinen.luokka in @sti_edeltäjä)) then
    result $res, rules liitesana, loppu;
  else
    if sijamuoto_sijasta($oikea.sija) = omanto then
      result $res, rules inen_johdos_nimisanasta;
    end;
    result $res, rules liitesana, loppu;
#    result $res, rules liitesana, tavuviiva, loppu;
  end;
end;


combi_rule laatutavan_sijapääte ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("laatutavan_sijapääte ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = sijapääte;

  define $edellinen := $vasen.($n-1);
  ? $oikea.sija in $edellinen.jatko;
  ? äs_ok ($edellinen,$oikea);

  ? ($oikea.sija /= sisätulento_Vn)  or sisätulento_Vn_oikein  ($oikea.sija, substring($edellinen.alku,1R), $sana);
  ? ($oikea.sija /= sisätulento_hVn) or sisätulento_hVn_oikein ($oikea.sija, substring($edellinen.alku,1R), $sana);

  if $oikea.äs = aä then $oikea.äs := $edellinen.äs; end;
  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (($oikea.sija = kerronto_sti) and ($edellinen.luokka in @sti_edeltäjä)) then
    result $res, rules liitesana, loppu;
  else
    if (omistusliite in $oikea.jatko) then
      result $res, rules omistusliite;
    end;
    if (liitesana in $oikea.jatko) then
      result $res, rules liitesana;
    end;
    if (loppu in $oikea.jatko) then
      result $res, rules loppu;
    end;
  end;
end;


combi_rule teonsana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("teonsana ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in <teonsana>;

#define $a := transmit ($oikea.jatko * @teonsanan_taivutusmuodot);

  define $i := $n - 1;
  ? $oikea.luokka in $vasen.$i.jatko;
  ? yhdyssana_oikein ($vasen, $oikea, $i);

#define $n1 := transmit (<"teonsana1"> + <$vasen>);
#define $n2 := transmit (<"teonsana2"> + <$oikea>);
#define $n3 := transmit (<"teonsana3"> + <$sana>);
#define $n6 := transmit (<"">);

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (loppu in  $oikea.jatko) then
    result $res, rules loppu;
  end;
  if (tavuviiva in  $oikea.jatko) then
    result $res, rules tavuviiva;
  end;
#  if (@tekijämuodot * $oikea.jatko /= <>) then
#    result $res, rules tekijämuodot;
#  end;
#  if (@nimitavat * $oikea.jatko /= <>) then
#    result $res, rules nimitavat;
#  end;
#  if (@laatutavat * $oikea.jatko /= <>) then
#    result $res, rules laatutavat;
#  end;
# Tämä on nopeampi kuin kaikki erikseen!
  result $res, rules tekijämuodot, nimitavat, laatutavat;
end;


combi_rule tekijämuodot ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("tekijämuodot ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in @tekijämuodot;

  define $i := $n - 1;
  ? $vasen.$i.luokka = teonsana;
  ? $oikea.luokka in $vasen.$i.jatko;
  ? äs_ok ($vasen.$i, $oikea);

#define $a := transmit ($vasen);
#define $b := transmit ($oikea.luokka);
#define $c := transmit ($sana);

  if $oikea.äs = aä then $oikea.äs := $vasen.$i.äs; end;

  # Päätteessä on sama ääntiö kuin vartalon lopussa,
  # esim. puhua => puhuu, saada => saa.
  #
  if (($oikea.luokka = kestämän_tekijäpääte_y3)
      and ($vasen.$i.alku matches ".*" + @ääntiö)) then
    require (viimeinen_kirjain ($vasen.$i.alku) = $sana);
  end;

  # Vvi-päätteessä Avi hyväksytään missä tahansa sanassa, muuten päätteen alussa
  # on sama ääntiö kuin vartalon lopussa: puhuuvi, sanoovi.
  #
  # "Savu käypi sieramista,: Pöly musta pörnyävi,: Tulta Hurja henkiävi,: Säkeniä suitsuavi, ..."
  # Frans Pietari Kemelli: Höyrylaiva Oulu. Oulun Viikko-Sanomia 14.8.1841.
  # http://fi.wikisource.org/wiki/H%C3%B6yrylaiva_Oulu
  # http://digi.lib.helsinki.fi/sanomalehti/secure/showPage.html?id=122472&conversationId=1&action=entryPage
  #
  if (($oikea.luokka = kestämän_tekijäpääte_y3_Vvi)
      and ($vasen.$i.alku matches ".*" + @ääntiö)) then
    require (($sana in <"avi", "ävi">) or
             (viimeinen_kirjain ($vasen.$i.alku) = substring($sana,1,1)));
  end;

  result $vasen + <[alku: $sana] + $oikea>,
         rules liitesana, loppu;
end;


combi_rule nimitavat ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("nimitavat ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in @nimitavat;

  define $i := $n - 1;
  ? $vasen.$i.luokka in <teonsana>;

#define $n1 := transmit (<"nimitavat1"> + <$vasen.$i>);
#define $n2 := transmit (<"nimitavat2"> + <$oikea>);

  ? $oikea.luokka in $vasen.$i.jatko;
#define $n3 := transmit (<"nimitavat3"> + <$vasen.$i.luokka> + <$oikea.jatko> + <$sana>);

  # Ääntiö + "iss[aä] käy mutta ei kerake + "iss[aä]".
  # Esim. puno+issa (puno+essa) käy mutta ei tull+issa (tull+essa).
  # Nyt esim. "aitoissa" on sekä aitta-sanan että aitoa-sanan muoto (aitoessa).
  #
  if (($oikea.luokka = nimitapa_2) and ($sana in <"issa", "issä">)) then
    ? ($vasen.$i.alku matches ".*[aeiouyäö]");
  end;

  ? äs_ok ($vasen.$i, $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.$i.äs; end;

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (nimitapa_1_pitkä in $oikea.jatko) then
    result $res, rules nimitapa_1_pitkä;
  end;

  if ($oikea.luokka = nimitapa_5) then
    result $res, rules omistusliite, loppu;
  else
    if (omistusliite in $oikea.jatko) then
      result $res, rules omistusliite;
    end;
    if (liitesana in $oikea.jatko) then
      result $res, rules liitesana;
    end;
    if (loppu in $oikea.jatko) then
      result $res, rules loppu;
    end;
    result $res, rules sijapääte;
  end;
end;


combi_rule nimitapa_1_pitkä ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("nimitapa_1_pitkä ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = nimitapa_1_pitkä;

  define $i := $n - 1;
  ? $vasen.$i.luokka in @nimitapa_1;
  ? nimitapa_1_pitkä in $vasen.$i.jatko;
  ? äs_ok ($vasen.$i, $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.$i.äs; end;

#define $nimi := transmit ("nimitapa_1_pitkä " + $vasen.$i.alku + " " + $sana);

  result $vasen + <[alku: $sana] + $oikea>, rules omistusliite;
end;


combi_rule laatutavat ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("laatutavat ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in @laatutavat;

  define $i := $n - 1;
  ? $oikea.luokka in $vasen.$i.jatko;
  ? $vasen.$i.luokka = teonsana;
  ? äs_ok ($vasen.$i, $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.$i.äs; end;

#define $n1 := transmit (<"laatutapa1"> + <$vasen>);
#define $n2 := transmit (<"laatutapa2"> + <$oikea>);
#define $n3 := transmit (<"laatutapa3"> + <$sana>);
#define $n4 := transmit (<"laatutapa4"> + <$i>);
#define $n5 := transmit (<"">);

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;
  if ((voittoaste in $oikea.jatko) or (yliaste in $oikea.jatko)) then
    result $res, rules laatutavan_voitto_yliaste;
  end;
  result $res, rules laatutavan_sijapääte;
end;


combi_rule kieltosana ($vasen, $oikea, $sana):
####define $profile := transmit ("kieltosana ($vasen, $oikea, $sana):");
  ? $oikea.luokka = kieltosana;

#define $nimi := transmit (<"kieltosana"> + <$sana>);
  result $vasen + <[alku: $sana] + $oikea>,
         rules liitesana, liitesana_kä, tavuviiva, loppu;
end;


combi_rule liitesana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("liitesana ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in <liitesana, liitesana2, liitesana_s>;

  define $i := $n - 1;
  ? $oikea.luokka in $vasen.$i.jatko;
  ? äs_ok ($vasen.$i, $oikea);

#define $a := transmit (<$vasen.$i.luokka> + <$vasen.$i.tapaluokka> + 
#                       <$vasen.$i.tekijä> + <$vasen.$i.luku> + <$sana> + <$oikea.luokka> + <$i>);

  if (($vasen.$i.luokka = teonsana) and
      ($vasen.$i.tapaluokka = käskytapa) and
      ($vasen.$i.tekijä = 2) and
      ($vasen.$i.luku = yksikkö) and
      ($sana in <"ko", "kö">)) then
    stop;
  else
    result $vasen + <[alku: $sana] + $oikea>, rules loppu;
  end;
end;


combi_rule liitesana_kä ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("liitesana_kä ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = liitesana_kä;

  define $i := $n - 1;
  ? $oikea.luokka in $vasen.$i.jatko;
  ? äs_ok ($vasen.$i, $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.$i.äs; end;

#define $nimi := transmit ("liitesana_kä " + $vasen.$i.alku + " " + $sana);
  result $vasen + <[alku: $sana] + $oikea>,
         rules liitesana, loppu;
end;


combi_rule omistusliite ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("omistusliite ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = omistusliite;

  define $i := $n - 1;

  ? $oikea.luokka in $vasen.$i.jatko;
  ? äs_ok ($vasen.$i, $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.$i.äs; end;
  define $result := $vasen + <[alku: $sana] + $oikea>;

  # Hyväksytään yksikön ensimmäisen omistusliite "in" eräissä
  # sijamuodoissa, esim. matkallain, matkaltain, matkallein;
  # ja myös esim. tyttärein (tyttäreni).
  #
  if (($sana = "in") and ($oikea.tekijä = 1) and äs_ok ($vasen.$i, $oikea)
      and ((($vasen.$i.luokka in <sijapääte, nimitapa_2, nimitapa_3>) and
             (not ($vasen.$i.sija in <vajanto_ttA, vajanto_ittA>)) and
             (substring (value_string ($vasen.$i.sija), 1R) in <"A", "e">))
            or (($vasen.$i.alku /= nil) and substring ($vasen.$i.alku, 1R) in <"e">))) then
    result $result,
           rules liitesana, loppu;
  end;

  # Jos sijamuoto on omanto_in, hyväksytään vain omistusliitteet "nsa", "nsä", "mme".
  # Omistusliitteet "nsa" ja "nsä" hyväksytään aina, mutta omistusliite "mme" vain, jos
  # sanan vartalon viimeinen kirjain on a tai e tai ä. Tämä algoritmi kelpaa Juhani
  # Ahon teoksille (http://www.lonnrot.net/etext.html).
  #
  # Siis hyväksytään esim. isäinsä, valainsa, kasvoinsa, pöytäimme, synteimme, mutta ei uskoimme.
  #
  if ($sana in <"ni", "si", "s", "nsa", "nsä", "ns", "mme", "nne">) then
    if ($vasen.$i.sija = omanto_in) then
      if (($sana in <"nsa", "nsä">) or
          (($sana in <"mme">) and (substring ($vasen.($i-1).alku, 1R) in <"a", "e", "ä">))) then
        result $result,
               rules liitesana, loppu;
      else
        stop;
      end;
    else
      result $result, rules liitesana, loppu;
    end;
  else
    if ($vasen.$i.luokka in <seikkasana, suhdesana> and omistusliite3_oikein ($vasen.$i.alku, $sana)) then
      if (not (strcat ($vasen) matches ".*(aa|ee|ii|oo|uu|yy|ää|öö)")) then
          result $result,
                 rules liitesana, loppu;
      end;
    elseif ($vasen.$i.luokka = sijapääte) then
      if (($vasen.$i.sija in <osanto_A, osanto_iA,
                              osanto_tA, osanto_ttA, osanto_itA,
                              osanto_jA,
                              olento_nA, olento_inA,
                              tulento_ksi, tulento_iksi,
                              sisäolento_ssA, sisäolento_issA,
                              sisäeronto_stA, sisäeronto_istA,
                              ulko_olento_llA, ulko_olento_illA,
                              ulkoeronto_ltA, ulkoeronto_iltA,
                              ulkotulento_lle, ulkotulento_ille,
                              vajanto_ttA, vajanto_ittA,
                              seuranto_ine>) and
          omistusliite3_oikein ($vasen.$i.alku, $sana)) then
        if (not (strcat ($vasen) matches ".*(aa|ee|ii|oo|uu|yy|ää|öö)")) then
          result $result,
                 rules liitesana, loppu;
        end;
      end;
    elseif (($vasen.$i.luokka in <nimitapa_1_pitkä, nimitapa_2, nimitapa_3, nimitapa_3_saama, nimitapa_5>) and
            omistusliite3_oikein ($vasen.$i.alku, $sana)) then
      result $result,
             rules liitesana, loppu;
    end;
  end;
end;


combi_rule voitto_yliaste ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("voitto_yliaste ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in @voittoaste + @yliaste;
  define $i := $n - 1;

#define $nimi1a := transmit ("voitto_yliaste1 " + $vasen.$i.alku + " " + $sana);
#define $nimi2a := transmit (<"voitto_yliaste2"> + <$vasen.$i>);
#define $nimi3a := transmit (<"voitto_yliaste3"> + <$oikea> + <$sana>);

##  ? (voittoaste in $vasen.$i.jatko) or (yliaste in $vasen.$i.jatko);
  ? $oikea.luokka in $vasen.$i.jatko;
  ? äs_ok ($vasen.$i, $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.$i.äs; end;

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if ($sana = "mpi" and $oikea.luokka = voittoaste and yhdyssana in $oikea.jatko) then
    result $res, rules yhdyssana;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (johdin_UUs in $oikea.jatko) then
    result $res, rules laatusanasta_johdettu_nimisana;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;

  result $res, rules sijapääte;
end;


combi_rule laatutavan_voitto_yliaste ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("laatutavan_voitto_yliaste ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in @voittoaste + @yliaste;
  define $i := $n - 1;

  ? $oikea.luokka in $vasen.$i.jatko;
  ? äs_ok ($vasen.$i, $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.$i.äs; end;

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;

  result $res, rules sijapääte;
end;


combi_rule nimisanan_johdos ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("nimisanan_johdos ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in @johdin_nimisanasta;

#define $a := transmit (<"a"> + <$vasen>);
#define $b := transmit (<"b"> + <$oikea>);
#define $c := transmit (<"c"> + <$sana>);

  define $i := $n - 1;
  if ($i greater 0) then
    ? $oikea.luokka in $vasen.$i.jatko;
    if ($oikea.luokka in <johdin_Us, johdin_UUs>) then
      ? $vasen.$i.luokka in <laatusana, nimi_laatusana>;
    end;
#    if ($oikea.luokka = johdin_inen) then
#      ? vasen.$i.alku matches ".*[^aeiouyäö][aeiouyäö]$";
#    end;
  end;

  ? äs_ok ($vasen.$i, $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.$i.äs; end;

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;
  if (@voittoaste + @yliaste * $oikea.jatko /= <>) then
    result $res, rules voitto_yliaste;
  end;
  if (tavuviiva in $oikea.jatko) then
    result $res, rules tavuviiva;
  end;
##  if (nimisana in $oikea.jatko) then
  if (yhdyssana in $oikea.jatko) then
    result $res, rules yhdyssana;
  end;
  result $res, rules sijapääte;
end;


subrule strcat ($vasen):
  define $s := "";

  foreach $k in $vasen:
    $s :=+ $k.alku;
  end;

  return $s;
end;


subrule sana1 ($tietue):
  if ($tietue.perusmuoto = nil) then
    return $tietue.alku;
  else
    return $tietue.perusmuoto;
  end;
end;


subrule sisätulento_Vn_oikein ($sija, $ed_kirjain, $sana):
  return ((($ed_kirjain matches @a) and ($sana matches "an?")) or
          (($ed_kirjain matches @e) and ($sana matches "en?")) or
          (($ed_kirjain matches @i) and ($sana matches "in?")) or
          (($ed_kirjain matches @o) and ($sana matches "on?")) or
          (($ed_kirjain matches @u) and ($sana matches "un?")) or
          (($ed_kirjain matches @y) and ($sana matches "yn?")) or
          (($ed_kirjain matches @ä) and ($sana matches "än?")) or
          (($ed_kirjain matches @ö) and ($sana matches "ön?")));
end;


subrule sisätulento_hVn_oikein ($sija, $ed_kirjain, $sana):
  return ((($ed_kirjain matches @a) and ($sana matches "han?")) or
          (($ed_kirjain matches @e) and ($sana matches "hen?")) or
          (($ed_kirjain matches @i) and ($sana matches "hin?")) or
          (($ed_kirjain matches @o) and ($sana matches "hon?")) or
          (($ed_kirjain matches @u) and ($sana matches "hun?")) or
          (($ed_kirjain matches @y) and ($sana matches "hyn?")) or
          (($ed_kirjain matches @ä) and ($sana matches "hän?")) or
          (($ed_kirjain matches @ö) and ($sana matches "hön?")) or
          (($ed_kirjain matches "'"))); # Parfait'hen yms.
end;


subrule omistusliite3_oikein ($sana, $liite):
  return ((($sana matches ".*" + @a) and ($liite = "an")) or
          (($sana matches ".*" + @e) and ($liite in <"en", "hen">)) or
          (($sana matches ".*" + @i) and ($liite = "in")) or
          (($sana matches ".*" + @o) and ($liite = "on")) or
          (($sana matches ".*" + @u) and ($liite = "un")) or
          (($sana matches ".*" + @y) and ($liite = "yn")) or
          (($sana matches ".*" + @ä) and ($liite = "än")) or
          (($sana matches ".*" + @ö) and ($liite = "ön")));
end;


subrule viimeinen_kirjain ($sana):
  if     ($sana matches ".*" + @a) then return "a";
  elseif ($sana matches ".*" + @e) then return "e";
  elseif ($sana matches ".*" + @i) then return "i";
  elseif ($sana matches ".*" + @o) then return "o";
  elseif ($sana matches ".*" + @u) then return "u";
  elseif ($sana matches ".*" + @y) then return "y";
  elseif ($sana matches ".*" + @ä) then return "ä";
  elseif ($sana matches ".*" + @ö) then return "ö";
  else
    error "Viimeinen kirjain ei ole ääntiö sanassa " + $sana;
  end;
end;


subrule yhdyssana_oikein ($vasen, $oikea, $n):
#define $a := transmit (<$oikea.luokka> + <$oikea.perusmuoto> + <$vasen.$n.luokka>);
#define $b := transmit (<$vasen.$n.perusmuoto> + <$oikea.perusmuoto>);

#define $a := transmit (<"a"> + <($vasen.1).alku> + <($vasen.1).perusmuoto> + <($vasen.1).luokka>);
#define $b := transmit (<"b"> + <($vasen.$n).alku> + <($vasen.$n).perusmuoto> + <($vasen.$n).luokka>);
#define $c := transmit (<"c"> + <$oikea.alku> + <$oikea.perusmuoto> + <$oikea.luokka>);
#define $d := transmit (<"d"> + <$n>);

  # Jotkut sanat eivät voi olla yhdyssanojen osina.
  #
  if ((($vasen.$n.tiedot /= nil) and ((ei_ys in $vasen.$n.tiedot) or (latex in $vasen.$n.tiedot))) or
      (($oikea.tiedot    /= nil) and ((ei_ys in $oikea.tiedot)    or (latex in $oikea.tiedot)))) then
    return no;
  end;

  # Ei hyväksytä tälläisia sanoja silloinkaan, kun sijamuoto on joku muu kuin nimentö (isi+n+maa ei käy).
  #
  if (($vasen.$n.luokka = sijapääte)
      and ($vasen.($n-1).tiedot /= nil)
      and ((ei_ys in $vasen.($n-1).tiedot) or (ei_ysa in $vasen.($n-1).tiedot))) then
    return no;
  end;

  if (($vasen.$n.tiedot /= nil) and (ei_ysa in $vasen.$n.tiedot) and
          ($oikea.luokka in @nimisana + <nimi_laatusana>)) then
    return no;
  elseif ($oikea.perusmuoto = "laatuisa") then
    if (not ($vasen.$n.luokka in <etuliite>)) then
      return no;
    end;
  elseif ($oikea.perusmuoto = "ilta") then
    #
    # Ei muotoja punais+ilta (punainen + ilta).
    #
    if (($vasen.$n.luokka in <laatusana, johdin_inen>) and
        ($vasen.$n.perusmuoto /= nil) and ($vasen.$n.perusmuoto matches ".*inen")) then
      return no;
    end;
  elseif ($oikea.perusmuoto = "nasta") then
    if (($n greater 1) and ($vasen.$n.luokka = sijapääte) and ($vasen.$n.sija = omanto_n)) then
      return no;   # Seurannasta ei ole seura + n + nasta.
    end;
  elseif (($vasen.$n.perusmuoto /= nil) and ($oikea.perusmuoto /= nil)) then
    define $s := $vasen.$n.perusmuoto;
    if (length($vasen.$n.alku) greater length($vasen.$n.perusmuoto)) then
      $s := $vasen.$n.alku;
    end;
    if ((substring($s,1R) matches @ääntiö) and (substring($oikea.perusmuoto,1) matches @ääntiö)) then
      return (substring($s,1R) /= substring($oikea.perusmuoto,1));
    end;
  end;

  return yes;
end;


subrule yhdyssanataulukko ($eka, $toka):
  define $taulukko := <
#      <<"">,    <"">>,
      <<"aasi">,   <"ala", "alainen">>,  # Aasi+ala+inen, aasi+alainen.
      <<"aateli">, <"soikea">>,          # Ei aateli+soike+us.
      <<"agra">,   <"ari", "arka">>,
      <<"akti">,   <"visti", "voi">>,
      <<"ala">,             <"härmä", "inen", "luokki", "sammua", "sammuttaa">>,   # Ala+luokissa, ala+sammu(ttu).
      <<"alanen">,          <"ammua", "ampua", "ammuttaa">>,
      <<"alas">,            <"ammua", "pää", "suka", "sukia", "suu">>,
      <<"ali">,             <"soida">>,
      <<"alko">,            <"iva", "ivata">>,
      <<"alli">,            <"suu">>,
      <<"alunen", "alus">,  <"talas">>,  # Alus+tala+is+ta,
      <<"amfi">,            <"bio">>,
      <<"amfibi">,          <"olento">>, # Amfibi+olennon.
      <<"ampu">,            <"vaisu">>,
      <<"anti">,            <"lainata">>,
      <<"apu">,             <"olka">>,
      <<"arja">,            <"lainen">>,
      <<"aro">,             <"matti", "misu">>,
      <<"arvo">,            <"istua">>,          # Arvo+istuma.
      <<"ase">,             <"maata", "mana">>,          # Ase+makaa+va.
      <<"askar">,           <"re">>,
      <<"auki">,            <"naida", "nainen", "naisinen", "olla", "olo">>,
      <<"auto">,            <"nova">>,   # Auto+novien.
      <<"avo">,             <"nainen">>,
      <<"avoke">,           <"lassa", "loka">>, # Avoke+lassa, avoke+loilla.
      <<"belgi">,           <"alainen">>,
      <<"bio", "demo", "etno", "geo", "lito", "orto", "para", "porno", "tele">,    <"graafi">>,
      <<"bodi">,            <"anus">>,
      <<"botti">,           <"cell">>,
      <<"dia">,             <"koni", "midi", "nasta", "spora">>,
      <<"ele">,             <"itä">>,
      <<"elektro", "äiti">, <"nisä">>, # Eletro+nisin. Äitin+isä, ei äiti+nisä.
      <<"elo">,             <"tee">>,
      <<"ensi">,            <"sää">>,
      <<"ensimmäinen">,     <"impi">>,   # Ensimmäis+impiä.
      <<"esikoinen">,       <"uusi">>,   # Esikois+uutensa (esikois + uusi).
      <<"este">,            <"säiliö">>, # Pesu+n+este+säiliö.
      <<"eura">,            <"joki">>,   # On omana sanana.
      <<"euro">,            <"palanen">>,
      <<"futu">,      <"rissa", "risti">>,
      <<"hai">,       <"talli">>,    # Hai+tallinen.
      <<"halti">,     <"joki">>,     # Halti+joiksi.
      <<"hara">,      <"voi", "voida", "vuo">>,
      <<"harras">,    <"teli">>,
      <<"hauras", "kangas", "kirkas", "pahanen", "paljas", "punanen", "vauras", "viisas", "vilkas">,    <"tupa">>,
      <<"heinä">,     <"tupo">>,
      <<"helve">,     <"tilli">>,
      <<"hima">,      <"lapsi", "lassa", "lasta", "lika">>,
      <<"hurri">,     <"kaani">>,
      <<"huvi">,      <"lassa">>,
      <<"hyppy">,     <"selli", "voimaan">>,   # Hyppy+voimaan+sakin.
      <<"hypo">,      <"tee", "teesi">>,
      <<"hyvin">,     <"voida", "voiva", "voipa">>,
      <<"hyvä">,      <"isotella">>,
      <<"hätä">,      <"katka">>,
      <<"hää">,       <"läsi">>,
      <<"inen">,      <"sakki">>,
      <<"ikä">,       <"vihi", "vihki">>,
      <<"isä">,       <"nisä">>,
      <<"itse">,      <"matto", "tie">>,
      <<"iva">,               <"nova">>,
      <<"jodi", "fluori">,    <"dia">>,
      <<"jumal">,     <"uus">>,
      <<"järkky">,    <"mättö">>,
      <<"jää">,       <"hyväinen">>,
      <<"kalla">,     <"vesi">>,
      <<"kalsa">,     <"reisi", "risa">>,
      <<"kali">,      <"umpi">>,   # Kali+umpi+toinen.
      <<"kana">,      <"vapari", "voida">>,  # Kana+voitu.
      <<"kannus">,    <"tavi">>,
      <<"kansa">,     <"inva">>,
      <<"kapi">,      <"nalli", "tali">>,  # Kapi+nallinen, kapi+talis+tien (kapi+talinen+tie).
      <<"kare">,      <"lika">>,
      <<"karja">,     <"lainen", "lassa">>,
      <<"karri">,     <"ääri">>,
      <<"kato">,      <"lila">>,
      <<"kemi">,      <"alli", "joki">>,
      <<"kiero", "kirkas", "moni", "musta", "piilo", "puna", "pyöreä", "sini", "tumma", "vaalea", "viiru">,    <"silmäistä">>,
      <<"Kim", "tele", "tu">, <"maa">>,
      <<"kimma">,     <"huti">>,
      <<"kiri">,      <"tiikki">>,  # Luultavasti väärin kirjoitettu "kritiikki".
      <<"kirjo">,     <"rasta">>,
      <<"kirkas">,    <"tuma">>,
      <<"kirkaste">,  <"tuki">>,            # Kirkaste+tuissa.
      <<"kiska">,     <"istua", "seka">>,   # Kiska+istuja.
      <<"kita">,      <"risti">>,
      <<"kitunen">,   <"sari">>,        # Messi+n+kitus+sari+lla.
      <<"koiras">,    <"euro">>,
      <<"koko">,      <"nainen">>,      # Koko+nais+valtainen.
      <<"koli">,      <"brie">>,        # Koli+brie+n.
      <<"komi">,      <"teko">>,        # Komi+teoille.
      <<"korni">,     <"lovi">>,        # Korni+lovi(n).
      <<"korsi">,     <"kaksi", "kalla">>,
      <<"kuli">,      <"kovis">>,       # Kuli+kovis+ta.
      <<"kulti">,     <"voi", "vuo">>,
      <<"kuokka">,    <"lassa", "lasta">>,
      <<"kuu">,       <"kausittainen", "lakka", "lemma", "luja", "luksus", "luminen", "lupa", "luu">>,
      <<"kure">,      <"misu">>,
      <<"kyllänen", "liukas", "puh", "päällys", "timo", "valmis">,  <"tie">>,
      <<"kylmä">,     <"varastoida">>,  # On sanastossa.
      <<"yksi", "kaksi", "kolme", "neljä", "viisi", "kuusi", "seitsemän", "kahdeksan", "yhdeksän", "kymmenen">,  <"vuota", "tuhka">>,
      <<"käsi">,      <"kirjoittaa">>,
      <<"käsin">,     <"oja", "ukki">>,
      <<"lainen">,    <"kala", "kasti", "kistu", "kuri", "kuu">>,
      <<"lakka">,     <"rissa">>,
      <<"lehdes">,    <"säkä", "sää">>,
      <<"liehu">,     <"koko", "maa", "maha", "massa", "vana", "vasta", "villa">>,
      <<"llinen">,    <"impi">,
      <<"loinen">,    <"kaksi", "tee", "tehdä">>,
      <<"lukunen">,   <"alin">>,
      <<"luokka">,    <"istua">>,
      <<"luu">,       <"hattu", "kutu", "lemma">>,
      <<"läinen">,    <"käki">>,
      <<"länsi">,     <"maistua">>,
      <<"läpi">,      <"käydä">>,
      <<"läsnä">,     <"olija", "olo", "olonen", "Olos">>,   # 2 ekaa ovat sanastossa.
      <<"maa">,       <"gis", "ilma", "ilmainen", "nisä">>,  # "Maailma" on sanastossa.
      <<"maagi">,     <"seksi", "silla", "silta">>,
      <<"mainen">,    <"emä">>,
      <<"maini">,     <"ostaa", "ottaa", "tukea", "tuki">>,
      <<"makro">,     <"bioottinen">>,  # On sanastossa.
      <<"mansi">,     <"kastaa", "koi", "koittaa">>,
      <<"mara">,      <"katti">>,
      <<"mehiläinen">, <"pesis">>,  # Mehiläis+pesis+tä.
      <<"meno">,      <"paussi">>,
      <<"mensu">,     <"rae">>,
      <<"meta">,      <"staasi">>,
      <<"metaani">,   <"rikastaa">>,
      <<"mieli">,     <"syy", "syys">>,
      <<"mielinen">,  <"ikä", "säkä", "sää", "tele", "teli", "tikki">>, # Mielis+ikä(än).
      <<"mikro">,     <"filmata">>,
      <<"misu">,      <"osittaa">>,
      <<"moni">,      <"naida", "nainen", "tora", "tori">>,
      <<"musti">,     <"koi", "koettaa">>,
      <<"muta">,      <"geeni", "geeninen">>,
      <<"mäki">,      <"tupalainen">>,
      <<"naali">,     <"seksi", "silla">>,
      <<"nomi">,      <"suu">>,
      <<"omatunto">,  <"vapa">>,
      <<"onninen">,   <"tuttu">>,
      <<"ope">,       <"reti">>,
      <<"oppinen">,   <"ääntö">>,
      <<"oranssi">,   <"seksi">>,
      <<"Osta">,      <"maa">>,
      <<"osto">,      <"skeida">>,
      <<"paine">,     <"kyllästää">>,
      <<"paita">,     <"silla">>,
      <<"palava">,    <"kivi">>,
      <<"peli">,      <"manni">>,
      <<"perin">,     <"tee">>,   # Perin+tee(llinen).
      <<"peru">,      <"noki">>,  # Peru+noissa.
      <<"perus">,     <"korjata">>,  # On oma sanansa.
      <<"perso">,     <"nalli">>,
      <<"peruste">,   <"luu">>,     # Peruste+luissa.
      <<"perään">,    <"pää">>,
      <<"pihla">,     <"joki">>,
      <<"pitkis">,    <"täkki">>,
      # "Poisjännin" ei ole "poisjännä"-sanan muoto, vaan väärin kirjoitettu "poisjäännin".
      <<"pois">,      <"jännä", "pää", "taka", "tuki", "tutti", "tuttu">>,
      <<"polvinen">,  <"tuki">>,     # Polvis+tuen.
      <<"poli">,      <"klinikka">>, # On oma sanansa.
      <<"porno">,     <"graafi">>,   # On oma sanansa.
      <<"posteri">,   <"ori">>,
      <<"pottu", "pysty">,    <"nokkaista">>,
      <<"punk">,      <"arka", "kari">>,
      <<"puoli">,     <"nainen">>,  # On oma sanansa.
      <<"puu">,       <"hai">>,
      <<"priori">,    <"soida">>,
      <<"psyko">,     <"fyysinen">>, # On sanastossa.
      <<"pyy">,       <"tee">>,   # Pyy+tee+llinen.
      <<"rad">,       <"kaali">>,
      <<"ranta">,      <"sippi">>,
      <<"rationaali">, <"seksi", "suu">>,
      <<"ratsas">,     <"tapa", "tavi", "tele", "teli", "tikki">>,
      <<"rauni">,     <"ottaa">>,      # Rauni+ota.
      <<"re">,        <"aktio", "väkä">>,
      <<"reva">,      <"niksi">>,
      <<"risti">,     <"kuulustella">>,
      <<"romani">,    <"alainen">>,
      <<"rondo">,     <"letto">>,
      <<"rusi">,      <"koi", "noita">>,
      <<"rulla">,     <"lautailla">>,     # On oma sanansa.
      <<"sala">,      <"kuljettaa", "maa", "maki", "makki", "maksi", "mana", "manner", "massa", "matti", "moinen", "moni">>,
      <<"salme">,     <"kivi", "oja", "perä", "suu">>,
      <<"Sam">,       <"maa">>,
      <<"samainen">,  <"tuta">>,
      <<"samu">,      <"raita">>,
      <<"sankar">,    <"ien", "itara", "naida">>,  # Sankar+itarina. Sankar+nainen ei ole sankar+naida.
      <<"savo">,      <"taksi">>,
      <<"sivula">,    <"usea">>,
      <<"snellman">,  <"laki">>,
      <<"soinen">,    <"aari">>,
      <<"sose">,      <"uros">>,
      <<"sportti">,   <"suu">>,
      <<"suo">,       <"mensu", "misu", "musti", "nina">>,
      <<"suu">,       <"reki", "ruis", "tee", "tehdä", "teloa">>,
      <<"syy">,       <"tee">>,
      <<"sävel">,     <"eittää">>,
      <<"taide">,     <"luomi", "luomu">>,
      <<"tanhu">,     <"villa">>,
      <<"tasa">,      <"uni">>,
      <<"taulu">,     <"koi", "koittaa">>,
      <<"taus">,      <"takki">>,
      <<"tee">,       <"maa", "maki", "makki">>,    # Tee+maa+n, tee+makin.
      <<"terve">,     <"yty">>,
      <<"terä">,      <"sportti">>,
      <<"tie">,       <"naukaista", "tee", "tie", "toinen", "tokko">>,
      <<"tieto">,     <"turpa">>,  # Tietoturvan ei ole tieto+turpa.
      <<"tiu">,       <"kimma">>,
      <<"tois">,      <"tapa">>,
      <<"toivo">,     <"malla">>,
      <<"toti">,      <"sennäköinen">>,
      <<"tove">,      <"re", "reisi">>,
      <<"ttu">,       <"nakki">>,
      <<"ttu", "tu">, <"valta">>,
      <<"tu">,        <"anne", "vasta">>,   # Esim. vilkais+tu+anne, vilkais+tu+vasta.
      <<"tuore">,     <"suola">>,
      <<"täti">,      <"lanne">>,
      <<"ulko">,      <"naida", "nainen">>,
      <<"ulkonen">,   <"uoma">>,
      <<"ulos">,      <"pää", "tavi", "tuma", "tupa", "tuttava">>,
      <<"ura">,       <"naukaista">>,  # Ura+naukaisija.
      <<"us">,        <"Neuvonen">>,
      <<"uus">,       <"arpoa", "into">>,
      <<"vaja">,      <"nainen">>,
      <<"valo">,      <"kuvata">>,
      <<"varo">,      <"vaisu">>,
      <<"varus">,     <"tee">>,    # Varus+tee+t.
      <<"vasta">,     <"pää">>,
      <<"vastaan">,   <"otto">>,
      <<"web">,       <"erä">>,    # Web+er+ille.
      <<"viher">,     <"ikä", "iäinen", "vuotaa">>,
      <<"viive">,     <"itä">>,
      <<"vik">,       <"koko", "oja", "uros">>,
      <<"vipunen">,   <"ilta">>,            # Vipus+ilta.
      <<"voi">,       <"maa", "malli", "mallinen", "manne", "paha", "tuma">>,
      <<"voinen">,    <"iva", "ivata">>,    # Voisivatko => vois+iva(ta).
      <<"vuo">,       <"leski", "vuosilta", "tee">>,    # Vuo+leske+llen, vuos+ilta, vuo+tee+n.
      <<"vuoro">,     <"vaikuttaa">>,       # On sanastossa.
      <<"vyö">,       <"täi">>,             # Vyö+täinen.
      <<"väli">,      <"syys">>,            # Kansain+väli+syys.
      <<"yhdys">,     <"valta">>,           # Yhdysvalta on oma sanansa.
      <<"ylen">,      <"katsoa">>,          # On sanastossa.
      <<"yli">,       <"härmä", "mitoittaa", "voi">>,    # Yli+voi+mainen (johdin_mAinen).
      <<"ylä">,       <"hää", "silla">>,
      <<"ylänen">,    <"ilta">>,

      <<"aamu", "helma", "hännys", "kevät", "musta", "nahka", "oma", "puna", "päällys">,  <"tae">>, # Aamutakeista ei ole aamu+tae.
      <<"ahne", "verta", "vuos">,       <"ilta">>, # Ahne+ilta, verta+illakseen, vuos+ilta.
      <<"aisti", "kanta", "rikko", "kerto", "kutsu", "toivo", "usko">,   <"muksia">>,
      <<"alainen", "alanen">,                                            <"pää", "suka", "sukia", "suu", "tulo">>,
      <<"alli", "pasi">,                                                 <"anssi">>,
      <<"eri", "esi">,                  <"koi">>,   # Eri+koi+sala, esi+kois- (esi + koi + inen).
      <<"euronen", "pikkunen">,                                          <"portti">>, # Euros+portti, pikkus+portti.
      <<"funktio", "instituutio", "konstituutio", "traditio">,           <"naali">>,
      <<"hauta", "kuiva", "ohja", "pala", "raitti", "sauma", "talo">,    <"usma">>,
      <<"jako", "keno", "mura">,       <"biitti">>,
      <<"into", "pyyntö">,             <"hima">>,
      <<"iso", "kanta">,               <"isä">>,
      <<"koti", "kotiin">,             <"pää">>,    # Kotiinpäin.
      <<"kuuma", "kylmä">,             <"valssata">>,
      <<"kymmen", "kymmenen">,         <"vuota">>,
      <<"manga", "toka", "vino">,      <"reva">>,
      <<"mari", "valin", "vero">,      <"nasta">>,
      <<"Pal", "Pál">,                 <"joki", "maa", "meri">>,
      <<"pyy", "tie">,                 <"täi">>,  # Pyy+täisin (pyy + täi + inen), tie+täisin.
      <<"sota", "säihky">,             <"väkä">>,
      <<"yhtä", "yksi">,               <"toinen", "toistaa">>
    >;

#define $a := transmit ($eka + " " + $toka);

  foreach $k in $taulukko:
    if (($eka in $k.1) and ($toka in $k.2)) then
      return yes;
    end;
  end;
  return no;
end;


subrule yhdyssanataulukko2 ($eka, $toka, $kolmas):
  define $taulukko := <
#      <<"">,    <"">,    <"">>,
      <<"arvo">,         <"is">,   <"tuma">>,         # Eri+arvo+is+tum+ista  arvo + johdin_inen + tuma.
      <<"elää">,         <"o">,    <"kuvata">>,       # Elokuvata.
      <<"evoluutio">,    <"n">,    <"aari", "ääri">>,
      <<"fotometri", "metri">, <"inen">,   <"säkä", "sää">>,
      <<"heitto">,    <"inen">,   <"tuki">>,    # Heitto+is+tu+in. Heitto + johdin_inen + tuki + keinonto_n.
      <<"hima">,      <"n">,      <"kala", "kalaisa">>,     # Hima+n+kalainen.
      <<"ilmaista", "karjaista">, <"u">,      <"oja">>,     # Ilmas+u+oja (ilma(i)sta + johdin_U + oja).
      <<"inkluusio">,             <"inen">,   <"mikki">>,
      <<"kaksi">,                 <"n">,      <"tuma", "tupa">>,    # Kahde+n+tuma, kahde+n+tuva+t.
      <<"kani">,                  <"n">,      <"manne">>,
      <<"keskinen">,              <"uoma">,   <"lainen">>,  # Keskis+uoma+lainen.
      <<"kolme">,                 <"n">,      <"aula">>,    # Kolme+n+aula+inen.
      <<"kori">,                  <"inen">,   <"tie">>,     # Kor+is+te+iden.
      <<"kutsu">,                 <"n">,      <"tapiiri">>,
      <<"laki">,                  <"n">,      <"asana">>,   # Lai+n+asana.
      <<"luokka">,       <"inen">,   <"tupa">>,
      <<"muuri">,        <"inen">,   <"ääntö">>,           # Palo+muur+is+ääntö. Palo + johdin_inen + ääntö.
      <<"näky">,         <"tön">,    <"ohja", "ohjain">>,  # Näy+tön+ohja+in, näy+tön+ohjain.
      <<"oma">,          <"tunto">,  <"vapa">>,
      <<"oppi">,         <"n">,      <"ioni">>,
      <<"palaa">,        <"va">,     <"kivi">>,    # Pala+va+kivi.
      <<"para", "ravi">, <"n">,      <"tola">>,
      <<"pari">,         <"inen">,   <"hissa", "printti">>, # Par+is+printti. Pari + johdin_inen + printti.
      <<"pito">,         <"inen">,   <"uus">>,     # Pitoisuus on sanastossa.
      <<"silla">,        <"n">,      <"pää">>,
      <<"suoda">,        <"ma">,     <"lainen", "laismainen", "laki">>,  # Suo+ma+lainen, suo+ma+laista (laki).
      <<"tukka">,        <"nuotta">, <"silla">>,
      <<"ulko">,         <"ravinto">, <"laaki">>,    # Ulko+ravinto+laakin.
      <<"us">,           <"n">,       <"amme">>,     # Esim. takoit+ukse+n+amme (ukse == johdin_Us).
      <<"vesi">,         <"inen">,    <"työ">>,      # Ves+is+töihin.
      <<"väsky">,        <"n">,       <"yö">>,       # Väsky+n+öitä.
      <<"yksi">,          <"n">,      <"mukainen">>, # Yhdenmukainen on sanastossa.
      <<"yksi", "kaksi", "kolme", "neljä", "viisi", "kuusi", "seitsemän", "kahdeksan", "yhdeksän", "kymmen", "kymmenen">,
                  <"n">,      <"vuota">>   # Yhden+vuotiaan ei ole yksi+vuota.
  >;

  foreach $k in $taulukko:
#define $a := transmit (<$eka> + <$toka> + <$kolmas>);
    if (($eka in $k.1) and ($toka in $k.2) and ($kolmas in $k.3)) then
      return yes;
    end;
  end;
  return no;
end;


#####################################################


end_rule loppu ($tietue):
  define $i := length ($tietue);
  ? loppu in $tietue.$i.jatko;

#foreach $k in $tietue:
#  define $n := transmit ($k);
#end;
#foreach $k in $tietue:
#  define $n := transmit (<"loppu "> + <$k.luokka> + <$k.alku>);
#end;

  define $n := $i;
  if ($tietue.$i.luokka in <liitesana, liitesana_s, omistusliite>) then
    $n := $i - 1;
  end;


  define $j := $n;
  repeat while ($tietue.$j.luokka in <sijapääte, omistusliite>);
    $j :=- 1;
  end;


  # Jotkut sanat eivät voi olla yhdyssanan jälkiosana.
  #
  # Ei työ+tyytyvä+isyys.
  #
  # Sukija-versiossa tällaiset sanat kuitenkin hyväksytään,
  # jos niiden edellä on yhdysviiva (esim. kirkko-isä hyväksytään,
  # mutta eri-ikäisyys ei ole eri-ikä+isyys). Sivuvaikutus: jos
  # sanaan kuuluu yhdysviiva, se tunnistetaan Sukija-versiossa
  # kahdesti (esim. esi-isä), ellei niitä ole merkitty sanastoon
  # lipulla ei_sukija.
  #

  foreach $u in length($tietue):
    if (($u greater 1) and ($u less_equal $j) and
        ($tietue.$u.tiedot /= nil) and (ei_ysj in $tietue.$u.tiedot)) then
     if ($tietue.($u-1).luokka /= tavuviiva) then
        stop;
      end;
    end;
  end;


  # inen-johtimella tehty sana voi olla vain yhdyssanan lopussa,
  # paitsi jos se on merkitty omaksi sanakseen.
  #
  repeat while ($tietue.$j.luokka in @johdin_laatusanasta + @johdin_nimisanasta - <johdin_inen>);
    $j :=- 1;
  end;
  define $k := $j;
  repeat
    if ($tietue.$k.luokka = johdin_inen) then
      if ($k = 2) then
        if (($tietue.($k-1).tiedot /= nil) and (inen in $tietue.($k-1).tiedot)) then
        else
          stop;
        end;
      end;
    end;
    $k :=- 1;
  while ($k greater 0);
  end;



  # Jotkut sanat voivat olla vain yhdyssanojen jälkiosana.
  # Paitsi jos niissä on kirjoitusvirhe.
  #
#  if ((($tietue.1).tiedot /= nil) and (ysj in ($tietue.1).tiedot)) then
#    stop;
#  end;


  if ($i greater 1) then
    foreach $p in $i-1:
      if (yhdyssanataulukko ($tietue.$p.perusmuoto, $tietue.($p+1).perusmuoto)) then
        stop;
      end;
    end;
  end;
  if ($i greater 2) then
    foreach $p in $i-2:
      if (yhdyssanataulukko2 ($tietue.$p.perusmuoto,
                              sana1($tietue.($p+1)),
                              $tietue.($p+2).perusmuoto)) then
        stop;
      end;
    end;
  end;

  result $tietue, accept;
end;


output_filter tulosta ($tulos):
  foreach $j in $tulos:
#define $a := transmit ($j);
#define $b := transmit ("");
    result perusmuoto ($j);
  end;
end;


subrule sana2 ($tietue):
#  ? ($tietue.luokka = lukusana);
#define $a := transmit ($tietue);
  if ($tietue.perusmuoto = "kymmenen") then
    return "kymmentä";
  elseif ($tietue.perusmuoto = "tuhat") then
    return "tuhatta";
  elseif ($tietue.perusmuoto in <"sata", "miljoona", "miljardi", "biljoona", "triljoona">) then
    return $tietue.perusmuoto + "a";
  else
    return sana1 ($tietue);
  end;
end;


subrule alku2 ($tietue, $alku):
#define $a := transmit ("alku2 " + $tietue.perusmuoto + " " + $alku);
  define $n := length ($alku);
  if ((substring ($tietue.perusmuoto, $n+1) = "i") and (substring ($tietue.alku, $n+1) /= "i")) then
    return (substring ($tietue.alku,1,$n) + "i" + substring ($tietue.alku, $n+1, length($tietue.alku)));
  end;
  if ((substring ($tietue.perusmuoto, $n+1) /= "i") and (substring ($tietue.alku, $n+1) = "i")) then
    return (substring ($tietue.alku,1,$n) + substring ($tietue.alku, $n+2, length($tietue.alku)));
  end;
  return $tietue.alku;
end;


subrule alku3 ($tietue, $alku):
#define $a := transmit ("alku3 " + $tietue.perusmuoto + " " + $alku);
  if ($tietue.alku matches (".+[oö]" : $eka, "i?t[uy](s|ks|kse)" : $loppu)) then
#define $ö := transmit ("ö " + substring ($tietue.perusmuoto, 4R) + " " + substring ($loppu, 1));
    if ((substring ($tietue.perusmuoto, 4R) = "i") and (substring ($loppu, 1) /= "i")) then
#define $b := transmit ("b " + substring ($loppu, 2, 1R));
      return (substring ($tietue.perusmuoto, 1, 4R) + $loppu);
    end;
    if ((substring ($tietue.perusmuoto, 4R) /= "i") and (substring ($loppu, 1) = "i")) then
#define $c := transmit ("c " + substring ($loppu, 2, 1R));
      return (substring ($tietue.perusmuoto, 1, 4R) + substring ($loppu, 2, 1R));
    end;
  end;
#define $d := transmit ("d");
  return $tietue.alku;
end;


subrule lukusanan_perusmuoto ($tietue, $i, $k, $s):
#define $a := transmit (<"a"> + <$tietue.$i.alku> + <$tietue.$i.perusmuoto> + <length($tietue)> + <$i> + <$k> + <$s>);

  if ($i = 1 and $tietue.$i.perusmuoto in <"sata", "tuhat", "miljoona", "miljardi", "biljoona", "triljoona">) then
    return $tietue.$i.perusmuoto;
  end;

  if ($tietue.$i.luokka = lukusanan_jälkiliite) then
    return $tietue.$i.perusmuoto;
  end;

  if ($tietue.$i.alaluokka = yksiyhdeksän) then
    if (($k greater 2) and ($i less $k) and ($tietue.($i+1).luokka = sijapääte) and ($tietue.($i+2).luokka /= lukusana)) then
      return $tietue.$i.alku;
    else
      return $tietue.$i.perusmuoto;
    end;
  elseif ($tietue.$i.perusmuoto = "kymmenen") then
    if (($i = $k) and (($s matches ".+sataa") or ($s = "sata"))) then
      return "kymmenen";
    else
      return "kymmentä";
    end;
  elseif ($tietue.$i.perusmuoto in <"kymmenen", "sata", "tuhat", "miljoona", "miljardi", "biljoona", "triljoona">) then
    if ($tietue.($i+1).luokka in <lukusana, sijapääte>) then
#define $b := transmit (<"b"> + <$tietue.$i.alku> + <$tietue.$i.perusmuoto> + <length($tietue)> + <$i> + <$k> + <$s>);
      return sana2 ($tietue.$i);
    else
#define $c := transmit (<"c"> + <$tietue.$i.alku> + <$tietue.$i.perusmuoto> + <length($tietue)> + <$i> + <$k> + <$s>);
      return $tietue.$i.perusmuoto;
    end;
  elseif ($tietue.$i.luokka = sijapääte) then
#define $ö := transmit (<"ö"> + <$tietue.$i.alku> + <$tietue.$i.perusmuoto> + <length($tietue)> + <$i> + <$k> + <$s>);
    if ($i less $k and $tietue.($i+1).luokka in <lukusana, lukusanan_jälkiliite>) then
      return "";
    else
      return $tietue.$i.alku;
    end;
  end;
  return alku ($tietue.$i);
end;


subrule alku ($tietue):
#define $a := transmit (<"ALKU "> + <$tietue>);

  if ($tietue.perusmuoto = nil) then return $tietue.alku; end;

  #
  # Kirjo(i)ttaa, kirjo(i)tella, kirjo(i)ttua, kirjo(i)ttautua.
  #
  if ($tietue.perusmuoto matches (".+[oö]" : $alku, "i?(tt(aa|ää)|tell[aä]|tt(ua|yä)|tt(au|äy)t(ua|yä))" : $loppu)) then
    return alku2 ($tietue, $alku);
#    define $a := alku2 ($tietue, $alku);
#    define $b := transmit ($a);
#    return $a;
  end;

  #
  # Aivo(i)tus, jao(i)tus, mutta ei esim. lootus.
  #
  if ($tietue.perusmuoto matches (".+[^oö]" : $alku, "i?t[uy]s" : $loppu)) then
    return alku3 ($tietue, $alku);
#    define $a := alku3 ($tietue, $alku);
#    define $b := transmit ($a);
#    return $a;
  end;
     

  #
  # Nuola(i)sta.
  #
  if ($tietue.perusmuoto matches ("..+[^aeiouyäö][aä]" : $alku, "i?st[aä]" : $loppu)) then
    if (not ($tietue.perusmuoto in <"rangaista", "rankaista">)) then
#define $nuolasta := transmit ("nuolasta");
      return alku2 ($tietue, $alku);
    end;
  end;
  #
  # Antautua/antauta. Antau(du)ttu-muodolle tulee väärä perusmuoto antauttu.
  #
#  if ($tietue.perusmuoto matches ("...*(au|äy)" : $alku, "t(ua|yä)" : $loppu)) then
#    define $n := length ($alku);
#    return substring($tietue.perusmuoto,1,$n+2);
#  end;

  # Onneto(i)n.
  #
  if (($tietue.luokka = johdin_tOn) and ($tietue.alku matches ("t[oö]in"))) then
#define $ton := transmit ("ton");
    return $tietue.perusmuoto;
  end;

  if ($tietue.luokka in <nimisana, laatusana, nimi_laatusana>) then
    #
    # Obliga(a)tio, obligatio(o)ni, obligatsio(o)ni.
    # Revolu(u)tio, revolutio(o)ni, revolutsio(o)ni.
    # Illu(u)sio,   illusio(o)ni.
    # Tradit(s)io,  traditsio(o)ni.
    # Funkt(s)io,   funktsio(o)ni; akt(s)io, aktsio(o)ni.
    #
    if (($tietue.alku matches ("..*[bcdfghjklmnpqrstvwxyz](aa?tio|ats?ioo?(n|ne|ni))")) or
        ($tietue.alku matches ("..*[bcdfghjklmnpqrstvwxyz](uu?tio|uts?ioo?(n|ne|ni))")) or
        ($tietue.alku matches ("..*[bcdfghjklmnpqrstvwxyz](uu?sio|usioo?(n|ni|ne))")) or
        ($tietue.alku matches ("..*[bcdfghjklmnpqrstvwxyz](its?io|itsioo?(n|ni|ne))")) or
        ($tietue.alku matches (".*(kts?io|ktsioo?(n|ni|ne))"))) then
      return $tietue.perusmuoto;
    #    
    # Symbo(o)li yms.
    #
    elseif ($tietue.alku matches ("...*[bcdfghjklmnpqrstvwxyz]" : $alku, "oo[dfglmnrv](i|e)?" : $loppu)) then
      return $alku + substring ($loppu, 2, 1R);
    #
    # Balla(a)di.
    #
    elseif ($tietue.alku matches ("...*[bcdfghjklmnpqrstvwxyz]" : $alku,  "aad(i|e)?" : $loppu)) then
      return $alku + substring ($loppu, 2, 1R);
    #
    # Biogra(a)fi.
    #
    elseif ($tietue.alku matches (".*.gr" : $alku, "aaf(i|e)?" : $loppu))  then
      return $alku + substring ($loppu, 2, 1R);
    #
    # Poli(i)si.
    #
    elseif ($tietue.perusmuoto = "poliisi" and substring ($tietue.alku, 1, 5) = "polis") then
      return "polii" + substring ($tietue.alku, 5, 1R);
    #
    # Tea(a)tteri.
    #
    elseif ($tietue.perusmuoto = "teatteri" and substring ($tietue.alku, 1, 5) = "teaat") then
      return "teat" + substring ($tietue.alku, 5, 1R);
    #
    # Liipa(i)sin.
    #
    elseif ($tietue.perusmuoto = "liipaisin" and substring ($tietue.alku, 1, 6) = "liipas") then
      return "liipai" + substring ($tietue.alku, 6, 1R);
    end;
  end;

#define $ö := transmit ("ö " + $tietue.alku + " " + $tietue.perusmuoto);
  return $tietue.alku;
end;


# Muutetaan sana perusmuotoon: Väisäsillemmekö -> Väisänen.
#
subrule perusmuoto ($tietue):
  define $n := length ($tietue);
  define $k := $n;

#define $z := transmit (<"1"> + <$tietue> + <$k>);

  # Poistetaan sanan lopusta osat, jotka eivät vaikuta perusmuotoon.
  #
  repeat while ($tietue.$k.luokka in <sijapääte, liitesana, liitesana2, liitesana_s,
                                      omistusliite, kaksoispiste,
                                      voittoaste, yliaste,
                                      liitesana_kä, nimitapa_1_pitkä, nimitapa_5>
                                      + @tositapa + @ehtotapa + @mahtotapa + @käskytapa
                                      + @nimitapa_1 + @nimitapa_2 + @nimitapa_3
                                      + @laatutapa_1 + @laatutapa_2);
#define $a := transmit (<"2"> + <$tietue.$k.perusmuoto> + <$tietue.$k.alku> + <$k>);
    $k :=- 1;
  end;

#define $a := transmit (<$k> + <$tietue>);

  define $s := "";
  foreach $i in $k - 1:
    if ($tietue.$i.lukutyyppi /= nil and $tietue.$i.lukutyyppi = perusluku) then
      $s :=+ lukusanan_perusmuoto ($tietue, $i, $k, $s);
    else
      $s :=+ alku ($tietue.$i);
    end;
  end;
  if ($k = 1) then
    $s :=+ sana1 ($tietue.$k);
  elseif ($tietue.$k.lukutyyppi /= nil and $tietue.$k.lukutyyppi = perusluku) then
    $s :=+ lukusanan_perusmuoto ($tietue, $k, $k, $s);
  else
    $s :=+ sana2 ($tietue.$k);
  end;
  return $s;
end;



###===========================================


combi_rule teonsanasta_johdettu_nimisana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("teonsanasta_johdettu_nimisana ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = teonsana;

#define $a := transmit ($vasen.($n-1).jatko);
#define $b := transmit ($oikea.jatko);
#define $c := transmit ($sana);
#define $d := transmit ($n);

  ? $oikea.jatko * (@teonsanasta_johdettu_nimisana) /= <>;

#define $e := transmit (@teonsanasta_johdettu_nimisana);

  if ($n greater 1) then
    ? yhdyssana_oikein ($vasen, $oikea, $n-1);
    ? $vasen.($n-1).jatko * <nimisana, nimi_laatusana, laatusana, etuliite> /= <>;
  end;

  result $vasen + <[alku: $sana] + $oikea>,
         rules teonsanan_johdos_nimisana;
end;


combi_rule teonsanan_johdos_nimisana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("teonsanan_johdos_nimisana ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in @teonsanasta_johdettu_nimisana;
  ? $oikea.luokka in $vasen.($n-1).jatko;

#  if ($oikea.luokka in <johdin_O>) then
    #
    # Vaihdetaan ääntiösointu oikeaksi Pitää -> pito.
    #
#    if (not ($vasen.($n-1).alku matches ".*" + @yäö + ".*")) then
  if (($oikea.luokka in <johdin_O>) and (not ($vasen.($n-1).alku matches ".*" + @yäö + ".*"))) then
      $vasen.($n-1) :=+ [alkuperäinen_äs: $vasen.($n-1).äs];
      $vasen.($n-1).äs := a;
#    end;
  end;

  ? äs_ok ($vasen.($n-1), $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.($n-1).äs; end;

#define $a := transmit ($vasen);
#define $b := transmit ($oikea);
#define $c := transmit ($sana);
#define $d := transmit ($n);

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (tavuviiva in $oikea.jatko and not (yhdyssana in $oikea.jatko)) then
    result $res, rules tavuviiva;
  end;
  if (yhdyssana in $oikea.jatko) then
    result $res, rules yhdyssana;
  end;
  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;
  if (@nimisanasta_johdettu_nimisana * $oikea.jatko /= <>) then
    result $res, rules nimisanasta_johdettu_nimisana;
  end;
  if (@nimisanasta_johdettu_laatusana * $oikea.jatko /= <>) then
    result $res, rules nimisanasta_johdettu_laatusana;
  end;
  if (@nimi_laatusanan_johdin * $oikea.jatko /= <>) then
    result $res, rules nimi_laatusanan_johdin;
  end;
  result $res, rules sijapääte;
end;


#################################################

combi_rule teonsanasta_johdettu_laatusana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("teonsanasta_johdettu_laatusana ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = teonsana;
  ? $oikea.jatko * @teonsanasta_johdettu_laatusana /= <>;

#define $a := transmit ($vasen);
#define $b := transmit ($oikea);
#define $c := transmit ($sana);
#define $d := transmit ($n);

  if ($n greater 1) then
    ? yhdyssana_oikein ($vasen, $oikea, $n-1);
#   ? $vasen.($n-1).jatko * <nimisana, nimi_laatusana, laatusana, etuliite> /= <>;
    ? yhdyssana in $vasen.($n-1).jatko;
  end;

  result $vasen + <[alku: $sana] + $oikea>,
         rules teonsanan_johdos_laatusana;
end;


combi_rule teonsanan_johdos_laatusana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("teonsanan_johdos_laatusana ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in @teonsanasta_johdettu_laatusana;
  ? $oikea.luokka in $vasen.($n-1).jatko;
  ? äs_ok ($vasen.($n-1), $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.($n-1).äs; end;

#define $a := transmit ($vasen);
#define $b := transmit ($oikea);
#define $c := transmit ($sana);
#define $d := transmit ($n);

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (tavuviiva in $oikea.jatko and (not yhdyssana in $oikea.jatko)) then
    result $res, rules tavuviiva;
  end;
  if (yhdyssana in $oikea.jatko) then
    result $res, rules yhdyssana;
  end;
  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;
  if (@laatusanasta_johdettu_nimisana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_nimisana;
  end;
  if (@laatusanasta_johdettu_laatusana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_laatusana;
  end;
  if (@nimi_laatusanan_johdin * $oikea.jatko /= <>) then
    result $res, rules nimi_laatusanan_johdin;
  end;
  if ((voittoaste in $oikea.jatko) or (yliaste in $oikea.jatko)) then
    result $res, rules voitto_yliaste;
  end;
  result $res, rules sijapääte;
end;


#################################################

combi_rule nimisanasta_johdettu_nimisana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("nimisanasta_johdettu_nimisana ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in @nimisanasta_johdettu_nimisana;
  ? $oikea.luokka in $vasen.($n-1).jatko;
  ? äs_ok ($vasen.($n-1), $oikea);

  # Johtimella johdin_UUs voidaan johtaa nimisana nimisanasta vain johtimista
  # johdin_jA_* ja johdin_tAr, esim. tekijä => tekijyys, tekijätär => tekijättäryys.
  #
  ? ($oikea.luokka /= johdin_UUs) or ($vasen.($n-1).luokka in @johdin_jA +<johdin_tAr>);

  if $oikea.äs = aä then $oikea.äs := $vasen.($n-1).äs; end;

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (tavuviiva in $oikea.jatko and not (yhdyssana in $oikea.jatko)) then
    result $res, rules tavuviiva;
  end;
  if (yhdyssana in $oikea.jatko) then
    result $res, rules yhdyssana;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  result $res, rules sijapääte;
end;


#################################################


combi_rule nimisanasta_johdettu_laatusana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("nimisanasta_johdettu_laatusana ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in @nimisanasta_johdettu_laatusana;

  define $i := $n - 1;

  ? $oikea.luokka in $vasen.$i.jatko;
  ? äs_ok ($vasen.$i, $oikea);

#  if ($oikea.luokka = johdin_inen) then
#define $a := transmit (<"a"> + <$vasen.$i.alku>);
#define $b := transmit (<"b"> + <$oikea>);
#define $c := transmit (<"c"> + <$sana>);
#define $d := transmit (<"d"> + <($vasen.$i.alku matches (".*[^aeiouyäö][aeiouyäö]"))>);
#define $e := transmit (<"e"> + <($vasen.$i.alku matches (".*[aeiouyäö]"))>);
#
#    ? $vasen.$i.alku matches (".*[aeiouyäö]");
#    ? $vasen.$i.alku matches (".*[^aeiouyäö][aeiouyäö]");
#  end;

  if $oikea.äs = aä then $oikea.äs := $vasen.($n-1).äs; end;

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (tavuviiva in $oikea.jatko and not (yhdyssana in $oikea.jatko)) then
    result $res, rules tavuviiva;
  end;
  if (yhdyssana in $oikea.jatko) then
    result $res, rules yhdyssana;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (@laatusanasta_johdettu_nimisana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_nimisana;
  end;
  if (@laatusanasta_johdettu_laatusana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_laatusana;
  end;
  if (@nimi_laatusanan_johdin * $oikea.jatko /= <>) then
    result $res, rules nimi_laatusanan_johdin;
  end;
  if ((voittoaste in $oikea.jatko) or (yliaste in $oikea.jatko)) then
    result $res, rules voitto_yliaste;
  end;
  result $res, rules sijapääte;
end;


#################################################


combi_rule laatusanasta_johdettu_nimisana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("laatusanasta_johdettu_nimisana ($vasen, $oikea, $sana, $n):");
#define $ö := transmit ("laatusanasta_johdettu_nimisana");
  ? $oikea.luokka in @laatusanasta_johdettu_nimisana;
  ? $oikea.luokka in $vasen.($n-1).jatko;
  ? äs_ok ($vasen.($n-1), $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.($n-1).äs; end;

#define $a := transmit ($vasen.($n-1));
#define $b := transmit ($oikea);
#define $c := transmit ($sana);
#define $d := transmit ($n);

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (tavuviiva in $oikea.jatko and not (yhdyssana in $oikea.jatko)) then
    result $res, rules tavuviiva;
  end;
  if (yhdyssana in $oikea.jatko) then
    result $res, rules yhdyssana;
  end;
  if (@nimisanasta_johdettu_laatusana * $oikea.jatko /= <>) then
    result $res, rules nimisanasta_johdettu_laatusana;
  end;
  if (@nimisanasta_johdettu_nimisana * $oikea.jatko /= <>) then
    result $res, rules nimisanasta_johdettu_nimisana;
  end;
  if (@nimi_laatusanan_johdin * $oikea.jatko /= <>) then
    result $res, rules nimi_laatusanan_johdin;
  end;
  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;
  result $res, rules sijapääte;
end;


combi_rule laatusanasta_johdettu_laatusana ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("laatusanasta_johdettu_laatusana ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in @laatusanasta_johdettu_laatusana;
  ? $oikea.luokka in $vasen.($n-1).jatko;

  if $oikea.äs = aä then $oikea.äs := $vasen.($n-1).äs; end;

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (tavuviiva in $oikea.jatko) then
    result $res, rules tavuviiva;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;
  if ((voittoaste in $oikea.jatko) or (yliaste in $oikea.jatko)) then
    result $res, rules voitto_yliaste;
  end;
  if (@laatusanasta_johdettu_nimisana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_nimisana;             # Hyvänlaisuus.
  end;
  result $res, rules sijapääte;
end;


###########################################################################33

# Erisnimien käsittely on muokattu Harri Pitkäsen Voikko-versiosta.

combi_rule erisnimi ($vasen, $oikea, $sana):
####define $profile := transmit ("erisnimi ($vasen, $oikea, $sana):");
  ? $oikea.luokka in @erisnimi;

  define $res := $vasen + <[alku: $sana] + $oikea>;
  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if (tavuviiva in $oikea.jatko) then
    result $res, rules tavuviiva;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;
  result $res, rules erisnimen_sijapääte;
end;


# Paikannimestä johdettu kansallisuuden nimi tai
# sukunimestä johdettu aatteen kannattajan nimi.
#
combi_rule paikannimen_ja_sukunimen_lainen_johdos ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("paikannimen_ja_sukunimen_lainen_johdos ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in <paikannimi, sukunimi>;
#define $a := transmit ($vasen);
#define $b := transmit ($oikea);
#define $c := transmit ($sana);
#define $d := transmit ($n);

  ? ($n = 1) or ($vasen.($n-1).jatko * <nimisana, nimi_laatusana, laatusana, etuliite> /= <>);
  ? johdin_lAinen in $oikea.jatko;

  result $vasen + <[alku: $sana] + $oikea>, rules paikannimen_ja_sukunimen_lainen_johdin;
end;


combi_rule paikannimen_ja_sukunimen_lainen_johdin ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("paikannimen_ja_sukunimen_lainen_johdin ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in <johdin_lAinen, johdin_lAisittAin>;
  ? äs_ok ($vasen.($n-1), $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.($n-1).äs; end;

#define $a := transmit ($vasen);
#define $b := transmit ($oikea);
#define $c := transmit ($sana);
#define $d := transmit ($n);

  define $res := $vasen + <[alku: $sana] + $oikea>;
  if (tavuviiva in $oikea.jatko and not (yhdyssana in $oikea.jatko)) then
    result $res, rules tavuviiva;
  end;
  if (yhdyssana in $oikea.jatko) then
    result $res, rules yhdyssana;
  end;
  if omistusliite in $oikea.jatko then
    result $res, rules omistusliite;
  end;
  if liitesana in $oikea.jatko then
    result $res, rules liitesana;
  end;
  if (@laatusanasta_johdettu_nimisana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_nimisana;
  end;
  if (loppu in$oikea.jatko) then
    result $res, rules loppu;
  end;
  if (<voittoaste, yliaste> * $oikea.jatko /= <>) then
    result $res, rules voitto_yliaste;
  end;
  result $res, rules sijapääte;
end;


combi_rule erisnimen_sijapääte ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("erisnimen_sijapääte ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = sijapääte;

#define $nimi := transmit (<$vasen> + <$oikea> + <$sana>);

  define $edellinen := $vasen.length ($vasen);

#define $e := transmit ($edellinen);

  ? $oikea.sija in $edellinen.jatko;
  ? äs_ok ($vasen.($n-1), $oikea);

  ? ($oikea.sija /= sisätulento_Vn)  or sisätulento_Vn_oikein  ($oikea.sija, substring($edellinen.alku,1R), $sana);
  ? ($oikea.sija /= sisätulento_hVn) or sisätulento_hVn_oikein ($oikea.sija, substring($edellinen.alku,1R), $sana);

  if $oikea.äs = aä then $oikea.äs := $edellinen.äs; end;

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if ($oikea.sija = kerronto_sti) then
    ? $edellinen.luokka in @sti_edeltäjä;
  elseif ($oikea.sija = omanto_n) then
    if omistusliite in $oikea.jatko then
      result $res, rules omistusliite;
    end;
    result $res, rules yhdysmerkki_erisnimen_jälkeen, johdettu_erisnimi;
#    result $res, rules yhdysmerkki_erisnimen_jälkeen, johdettu_paikannimi, johdettu_etunimi;
  else
    if omistusliite in $oikea.jatko then
      result $res, rules omistusliite;
    end;
    if tavuviiva in $oikea.jatko then
      result $res, rules yhdysmerkki_erisnimen_jälkeen;
    end;
  end;
  result $res, rules liitesana, loppu;
end;


combi_rule yhdysmerkki_erisnimen_jälkeen ($vasen, $oikea, $sana):
####define $profile := transmit ("yhdysmerkki_erisnimen_jälkeen ($vasen, $oikea, $sana):");
  ? $oikea.luokka = tavuviiva;

  define $res := $vasen + <[alku: $sana] + $oikea>;
  result $res, rules yhdyssana, erisnimi;
end;


combi_rule johdettu_erisnimi ($vasen, $oikea, $sana):
####define $profile := transmit ("johdettu_erisnimi ($vasen, $oikea, $sana):");
  ? ($oikea.paikannimen_jälkiliite = yes) or ($oikea.etunimen_jälkiliite = yes);
  define $res := $vasen + <[alku: $sana] + $oikea>;
  if omistusliite in $oikea.jatko then
    result $res, rules omistusliite;
  end;
  if loppu in $oikea.jatko then
    result $res, rules loppu;
  end;
  if liitesana in $oikea.jatko then
    result $res, rules liitesana;
  end;
  if tavuviiva in $oikea.jatko then
    result $res, rules yhdysmerkki_erisnimen_jälkeen;
  end;
  result $res, rules erisnimen_sijapääte;
end;


# inen-johdinta edeltävä nimisana.
# Sääntö ei voi olla sanan alussa.
#
combi_rule inen_johdos_nimisanasta ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("inen_johdos_nimisanasta ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in <nimisana, nimi_laatusana>;
  ? johdin_inen in $oikea.jatko;
  ? $oikea.tiedot = nil or
    (not ei_ys in $oikea.tiedot and not ei_ysj in $oikea.tiedot);

#  define $a := transmit ($vasen);
#  define $b := transmit ($oikea.jatko);
#  define $c := transmit ($sana);
#  define $d := transmit ($n);

  result $vasen + <[alku: $sana] + $oikea>, rules johdin_inen;
end;


combi_rule johdin_inen ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("johdin_inen ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka = johdin_inen;

#  define $ö := transmit ("AAAAAAAAAAAAAAA");
#  define $a := transmit ($vasen);
#  define $b := transmit ($oikea.jatko);
#  define $c := transmit ($sana);
#  define $d := transmit ($n);
#  define $x := transmit ("BBBBBBBBBBBBBBB");

  define $i := $n - 1;
  ? äs_ok ($vasen.$i, $oikea);

  if $oikea.äs = aä then $oikea.äs := $vasen.$i.äs; end;

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if tavuviiva in $oikea.jatko then
    result $res, rules tavuviiva;
  end;
  if omistusliite in $oikea.jatko then
    result $res, rules omistusliite;
  end;
  if loppu in $oikea.jatko then
    result $res, rules loppu;
  end;
  if liitesana in $oikea.jatko then
    result $res, rules liitesana;
  end;
  if (@laatusanasta_johdettu_nimisana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_nimisana;
  end;
  if (@laatusanasta_johdettu_laatusana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_laatusana;
  end;
  if ((voittoaste in $oikea.jatko) or (yliaste in $oikea.jatko)) then
    result $res, rules voitto_yliaste;
  end;
  result $res, rules sijapääte;
end;


subrule äs_ok ($edellinen, $oikea):
#define $a := transmit (<"äs_ok"> + <$edellinen.äs> + <$oikea.äs>);
#define $b := transmit (<"äs_ok"> + <$edellinen>);
#define $c := transmit (<"äs_ok"> + <$oikea>);

  return ($oikea.äs = aä or $edellinen.äs = aä or $oikea.äs = $edellinen.äs);
end;


combi_rule nimi_laatusanan_johdin ($vasen, $oikea, $sana, $n):
####define $profile := transmit ("nimi_laatusanan_johdin ($vasen, $oikea, $sana, $n):");
  ? $oikea.luokka in @nimi_laatusanan_johdin;
  ? $oikea.luokka in $vasen.($n-1).jatko;
  ? äs_ok ($vasen.($n-1), $oikea);

#define $b := transmit ($oikea.luokka);
#define $a := transmit ($vasen);
#define $b := transmit ($oikea);
#define $c := transmit ($sana);
#define $d := transmit ($n);

  if $oikea.äs = aä then $oikea.äs := $vasen.($n-1).äs; end;

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if (tavuviiva in $oikea.jatko and not (yhdyssana in $oikea.jatko)) then
    result $res, rules tavuviiva;
  end;
  if (yhdyssana in $oikea.jatko) then
    result $res, rules yhdyssana;
  end;
  if (@laatusanasta_johdettu_nimisana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_nimisana;
  end;
  if (@laatusanasta_johdettu_laatusana * $oikea.jatko /= <>) then
    result $res, rules laatusanasta_johdettu_laatusana;
  end;
  if (loppu in $oikea.jatko) then
    result $res, rules loppu;
  end;
  if (omistusliite in $oikea.jatko) then
    result $res, rules omistusliite;
  end;
  if (liitesana in $oikea.jatko) then
    result $res, rules liitesana;
  end;
  if ((voittoaste in $oikea.jatko) or (yliaste in $oikea.jatko)) then
    result $res, rules voitto_yliaste;
  end;
  result $res, rules sijapääte;
end;


##########################################

# Lukusanojen käsittely on muokattu Harri Pitkäsen Voikko-versiosta.

combi_rule lukusana ($vasen, $oikea, $sana, $index):
####define $profile := transmit ("lukusana ($vasen, $oikea, $sana, $index):");
  ? $oikea.luokka = lukusana;
  define $sijamuoto := nil;
  define $luku := nil;

  if ($oikea.alaluokka = erikoisluku) then
    define $erikoisres := $vasen + <[alku: $sana] + $oikea>;
    if (loppu in $oikea.jatko) then
      result $erikoisres, rules loppu;
    end;
    if (liitesana in $oikea.jatko) then
      result $erikoisres, rules liitesana;
    end;
    if (lukusanan_jälkiliite in $oikea.jatko) then
      result $erikoisres, rules lukusanan_jälkiliite;
    end;
    stop;
  end;

  if ($index greater 1) then
    define $edellinen := $vasen.($index - 1);
    ? $edellinen.lukutyyppi = nil or $edellinen.lukutyyppi = $oikea.lukutyyppi;
    $sijamuoto := $edellinen.sijamuoto;
    $luku := $edellinen.luku;
    # Estetään peräkkäiset "satasata", "tuhattuhat" jne.
    if ($edellinen.luokka = lukusana) then
      ? not ($oikea.alaluokka = $edellinen.alaluokka);
    end;
  end;
  define $res := $vasen + <[alku: $sana, sijamuoto: $sijamuoto, luku: $luku] + $oikea>;

  if ($oikea.alaluokka = yksiyhdeksän) then
    if (nimentö in $oikea.jatko) then
      if loppu in $oikea.jatko then
        result $res, rules loppu;
      end;
      result $res, rules lukusana_toista, lukusana_sisäkerroin,
                         liitesana;
##                   liitesana, lukusanan_jälkiliite;
##                   nimisana, laatusana;
##                   nimisana, inen_johdos_nimisanasta, inen_päätteinen_laatusana;
    end;
    if (omistusliite in $oikea.jatko) then
      result $res, rules omistusliite;
    end;
  elseif ($oikea.alaluokka in <kymmenen, sata>) then
    if (nimentö in $oikea.jatko) then
      if omistusliite in $oikea.jatko then
        result $res, rules omistusliite;
      end;
      if loppu in $oikea.jatko then
        result $res, rules loppu;
      end;
      result $res, rules lukusana_sisäkerroin,
                         liitesana;
##                   liitesana, lukusanan_jälkiliite;
##                   nimisana, laatusana;
##                   nimisana, inen_johdos_nimisanasta, inen_päätteinen_laatusana;
    end;
  elseif ($oikea.alaluokka in <tuhat, miljoona, miljardi, biljoona, triljoona> and nimentö in $oikea.jatko) then
    if omistusliite in $oikea.jatko then
      result $res, rules omistusliite;
    end;
    if loppu in $oikea.jatko then
      result $res, rules loppu;
    end;
    result $res, rules liitesana, lukusanan_jälkiliite;
##                       yhdyssana;
##                 nimisana, laatusana;
##                 nimisana, inen_johdos_nimisanasta, inen_päätteinen_laatusana;
   elseif ($oikea.alaluokka = numeromerkki) then
     $res := $vasen + <[alku: $sana, pilkku: no, rakenne: "=q"] + $oikea>;
     result $res, rules lukusana_numero; ##, yhdysmerkki_numeron_jälkeen;
     result $res, rules loppu;
  end;
  if ($oikea.alaluokka in <sata, tuhat>) then
    if (nimentö in $oikea.jatko) then
      result $res, rules lukusana;
    end;
  end;
#  result $res, rules lukusana_sijapääte;
  result $res, rules yhdyssana, lukusana_sijapääte;
end;


combi_rule lukusana_sijapääte ($vasen, $oikea, $sana, $index):
####define $profile := transmit ("lukusana_sijapääte ($vasen, $oikea, $sana, $index):");
  ? $oikea.luokka = sijapääte;
  define $edellinen := $vasen.($index - 1);
  ? $oikea.sija in $edellinen.jatko;
  ? äs_ok($edellinen, $oikea);
  if $oikea.äs = aä then $oikea.äs := $edellinen.äs; end;

  define $sijamuoto := sijamuoto_sijasta($oikea.sija);
  ? $edellinen.sijamuoto = nil or $edellinen.sijamuoto = $sijamuoto;
  ? $edellinen.luku = nil or $edellinen.luku = $oikea.luku;

  define $res := $vasen + <[alku: $sana, sijamuoto: $sijamuoto, lukutyyppi: $edellinen.lukutyyppi] + $oikea>;
  if ($edellinen.alaluokka = yksiyhdeksän) then
    if omistusliite in $oikea.jatko then
      result $res, rules omistusliite;
    end;
    #
    # Estetään seitsmä+n+kertainen-tyyppisten sanojen tunnistuminen kahdesti.
    #
    if (not (($oikea.sija = omanto_n) and ($vasen.($index-1).perusmuoto in <"seitsemän", "kahdeksan", "yhdeksän">))) then
      result $res, rules yhdyssana;
    end;
    result $res, rules lukusana_toista, lukusana_sisäkerroin;
##                       yhdyssana;
##                 lukusanan_jälkiliite;
##                 nimisana, laatusana;
##                 nimisana, inen_johdos_nimisanasta, inen_päätteinen_laatusana;
  elseif ($edellinen.alaluokka in <kymmenen, sata>) then
    if omistusliite in $oikea.jatko then
      result $res, rules omistusliite;
    end;
    result $res, rules lukusana_sisäkerroin, lukusanan_jälkiliite;
  else
    result $res, rules yhdyssana;
                       ## , nimisana, lukusanan_jälkiliite, laatusana;
                       ##, inen_johdos_nimisanasta, inen_päätteinen_laatusana;
  end;
  if loppu in $oikea.jatko then
    result $res, rules loppu;
  end;
  if ($edellinen.alaluokka in <sata, tuhat>) then
    result $res, rules lukusana;
  end;
  if liitesana in $oikea.jatko then
    result $res, rules liitesana;
  end;
end;


combi_rule lukusana_sisäkerroin ($vasen, $oikea, $sana, $index):
####define $profile := transmit ("lukusana_sisäkerroin ($vasen, $oikea, $sana, $index):");
  ? $oikea.luokka = lukusana;
  ? $oikea.alaluokka in <kymmenen, sata, tuhat, miljoona, miljardi, biljoona>;

  define $edellinen := $vasen.($index - 1);
  ? $edellinen.lukutyyppi = $oikea.lukutyyppi;
  define $res := $vasen + <[alku: $sana, sijamuoto: $edellinen.sijamuoto, luku: $edellinen.luku] + $oikea>;

  if ($edellinen.sijamuoto in <nil, nimentö>) then
    result $res, rules lukusana_sisäkerroin_osanto;
  else
    result $res, rules lukusana_sisäkerroin_sijapääte;
  end;
  
  if ($oikea.lukutyyppi = järjestysluku) then
    result $res, rules lukusana;
  end;
  
  if ($oikea.lukutyyppi = järjestysluku and loppu in $oikea.jatko) then
    if omistusliite in $oikea.jatko then
      result $res, rules omistusliite;
    end;
    if loppu in $oikea.jatko then
      result $res, rules loppu;
    end;
    result $res, rules liitesana;
  end;
end;


combi_rule lukusana_sisäkerroin_sijapääte ($vasen, $oikea, $sana, $index):
####define $profile := transmit ("lukusana_sisäkerroin_sijapääte ($vasen, $oikea, $sana, $index):");
  ? $oikea.luokka = sijapääte;
  define $edellinen := $vasen.($index - 1);
  ? $oikea.sija in $edellinen.jatko;
  ? äs_ok($edellinen, $oikea);
  if $oikea.äs = aä then $oikea.äs := $edellinen.äs; end;

  define $sijamuoto := sijamuoto_sijasta($oikea.sija);
  ? $edellinen.sijamuoto = nil or $edellinen.sijamuoto = $sijamuoto;
  ? $edellinen.luku = nil or $edellinen.luku = $oikea.luku;

  define $res := $vasen + <[alku: $sana, sijamuoto: $sijamuoto, lukutyyppi: $edellinen.lukutyyppi] + $oikea>;
  if omistusliite in $oikea.jatko then
    result $res, rules omistusliite;
  end;
  if loppu in $oikea.jatko then
    result $res, rules loppu;
  end;
  result $res, rules lukusana,
                     liitesana, lukusanan_jälkiliite;
#                     yhdyssana, liitesana, lukusanan_jälkiliite;
##               nimisana, laatusana;
##               nimisana, inen_johdos_nimisanasta, inen_päätteinen_laatusana;
end;

combi_rule lukusana_sisäkerroin_osanto ($vasen, $oikea, $sana, $index):
####define $profile := transmit ("lukusana_sisäkerroin_osanto ($vasen, $oikea, $sana, $index):");
  ? $oikea.luokka = sijapääte;
  define $edellinen := $vasen.($index - 1);
  ? $oikea.sija in $edellinen.jatko;
  ? sijamuoto_sijasta($oikea.sija) = osanto;
  ? äs_ok($edellinen, $oikea);
  if $oikea.äs = aä then $oikea.äs := $edellinen.äs; end;

  define $res := $vasen + <[alku: $sana, lukutyyppi: $edellinen.lukutyyppi] + $oikea>;
  if omistusliite in $oikea.jatko then
    result $res, rules omistusliite;
  end;
  if loppu in $oikea.jatko then
    result $res, rules loppu;
  end;
  result $res, rules lukusana, lukusanan_jälkiliite,
                     liitesana;
##, yhdyssana;
##               nimisana, laatusana; ##, inen_johdos_nimisanasta, inen_päätteinen_laatusana;
end;

combi_rule lukusana_toista ($vasen, $oikea, $sana, $index):
####define $profile := transmit ("lukusana_toista ($vasen, $oikea, $sana, $index):");
  ? $oikea.luokka = lukusana;
  ? $oikea.alaluokka = toista;
  define $edellinen := $vasen.($index - 1);
  define $res := $vasen + <[alku: $sana, sijamuoto: $edellinen.sijamuoto,
                            luku: $edellinen.luku, lukutyyppi: $edellinen.lukutyyppi] + $oikea>;
  if loppu in $oikea.jatko then
    result $res, rules loppu;
  end;
##  result $res, rules yhdyssana, lukusana_sisäkerroin,
  result $res, rules lukusana_sisäkerroin,
                     liitesana, lukusanan_jälkiliite;
##                   inen_johdos_nimisanasta, inen_päätteinen_laatusana;
##                     nimisana, laatusana;
end;

combi_rule lukusanan_jälkiliite ($vasen, $oikea, $sana, $index):
####define $profile := transmit ("lukusanan_jälkiliite ($vasen, $oikea, $sana, $index):");
  ? $oikea.luokka in <lukusanan_jälkiliite, tavuviiva>;
  # FIXME: yhdysviivan käyttöä ei vielä tueta lukusanan ja sen jälkiliitteen välissä
  define $res := $vasen + <[alku: $sana] + $oikea>;
  if $oikea.luokka = tavuviiva then
    result $res, rules loppu;
  else
    define $edellinen := $vasen.($index - 1);
    ? $edellinen.lukutyyppi = nil or $edellinen.lukutyyppi = $oikea.lukutyyppi;
    if omistusliite in $oikea.jatko then
      result $res, rules omistusliite;
    end;
    if tavuviiva in $oikea.jatko then
      result $res, rules tavuviiva;
    end;
    if loppu in $oikea.jatko then
      result $res, rules loppu;
    end;
    result $res,
           rules ## ei_ys_sijapääte,
                 yhdyssana,
                 sijapääte,
##                 nimisana, etuliite,
                 liitesana,
                 nimisanan_johdos;
##                 nimisana_laatusanasta, nimisana_teonsanasta;
  end;
end;

combi_rule lukusana_numero ($vasen, $oikea, $sana, $index):
####define $profile := transmit ("lukusana_numero ($vasen, $oikea, $sana, $index):");
  ? $oikea.luokka = lukusana;

  define $edellinen := $vasen.($index - 1);
  $oikea :=+ [pilkku: $edellinen.pilkku];
  define $res := $vasen + <[alku: $sana] + $oikea>;

  if $oikea.alaluokka = numeromerkki then
    result $res, rules lukusana_numero; ##, yhdysmerkki_numeron_jälkeen;
    result $res, rules loppu;
  elseif $oikea.alaluokka = pilkku and $oikea.pilkku /= yes then
    $oikea :=+ [pilkku: yes];
    result $vasen + <[alku: $sana] + $oikea>, rules lukusana_numero;
  end;
end;


# Aputaulukko funktiolle sijamuoto_sijasta
define @sijamuoto_sijasta_muunnostaulu :=
[nimentö:     nimentö,
 nimentö_t:   nimentö,
 nimentö_tkA: nimentö,
 omanto_n:    omanto,
 omanto_nkA:  omanto,
 omanto_ien:  omanto,
 omanto_jen:  omanto,
 omanto_en:   omanto,
 omanto_in:   omanto,
 omanto_ten:  omanto,
 omanto_iT:   omanto,
 omanto_idän: omanto,
 kohdanto_idät: kohdanto,
 kohdanto_t: kohdanto,
 osanto_A:    osanto,
 osanto_AA:   osanto,
 osanto_iA:   osanto,
 osanto_jA:   osanto,
 osanto_ttA:  osanto,
 osanto_itA:  osanto,
 osanto_tA:   osanto,
 olento_nA:   olento,
 olento_inA:  olento,
 tulento_ksi: tulento,
 tulento_iksi: tulento,
 sisäolento_ssA: sisäolento,
 sisäolento_issA: sisäolento,
 sisäolento_nA: sisäolento,
 sisäeronto_stA: sisäeronto,
 sisäeronto_istA: sisäeronto,
 sisäeronto_tA: sisäeronto,
 sisätulento_Vn: sisätulento,
 sisätulento_VVn: sisätulento,
 sisätulento_hVn: sisätulento,
 sisätulento_iin: sisätulento,
 sisätulento_ihin: sisätulento,
 sisätulento_seen: sisätulento,
 sisätulento_isiin: sisätulento,
 sisätulento_sen: sisätulento,
 sisätulento_isin: sisätulento,
 sisätulento_nne: sisätulento,
 ulko_olento_llA: ulko_olento,
 ulko_olento_illA: ulko_olento,
 ulkoeronto_ltA: ulkoeronto,
 ulkoeronto_iltA: ulkoeronto,
 ulkotulento_lle: ulkotulento,
 ulkotulento_ille: ulkotulento,
 vajanto_ttA: vajanto,
 vajanto_ittA: vajanto,
 seuranto_ine: seuranto,
 keinonto_n: keinonto,
 keinonto_in: keinonto,
 tulento_s: tulento
];


# Palauttaa annettua sijasymbolia vastaavan sijamuodon
subrule sijamuoto_sijasta($sija):
  return @sijamuoto_sijasta_muunnostaulu.$sija;
end;


#robust_rule robust ($surface, $remain_input):
#  define $a := transmit (<"a"> + <$surface>);
#  define $b := transmit (<"b"> + <$remain_input>);
#end;


combi_rule yhdyssana ($vasen, $oikea, $sana, $n):
#define $profile := transmit ("yhdyssana ($vasen, $oikea, $sana, $n):");

#  ? $oikea.luokka /= lukusana;
#if ($oikea.luokka = lukusana) then
#define $a := transmit (($vasen.1).alku);
#define $b := transmit ($oikea.luokka);
#define $c := transmit (<$sana> + <"§">);
#end;

  define $i := $n - 1;

##assert ($n-1 = length($vasen));

##define $aa := transmit (<"Huu"> + <$vasen.$i> + <$sana> + <$oikea>);

  if ($oikea.luokka = seikkasana and $oikea.tiedot /= nil and
      ys_perusosa in $oikea.tiedot and $vasen /= <>) then

    if (($vasen.$i.luokka = sijapääte and $vasen.$i.sija = omanto_n)
        or (($vasen.$i.perusmuoto /= nil)
            and (($vasen.$i.perusmuoto = $vasen.$i.alku)
                 or (($vasen.$i.perusmuoto matches ".*inen") and ($vasen.$i.alku matches ".+is") and
                     (not ($vasen.$i.luokka in <johdin_llinen, johdin_inen>)))))) then


      if (loppu in $oikea.jatko) then
        result $vasen + <[alku: $sana] + $oikea>, rules loppu;
      end;
      if (liitesana in $oikea.jatko) then
         result $vasen + <[alku: $sana] + $oikea>, rules liitesana;
      end;
      if (omistusliite in $oikea.jatko) then
        result $vasen + <[alku: $sana] + $oikea>, rules omistusliite;
      end;
      result $vasen + <[alku: $sana] + $oikea>, rules sijapääte;
    end;
  end;


#foreach $z in $vasen: define $a := transmit (<$z.alku> + <$z.perusmuoto> + <$z.luokka> + <$z.jatko>); end;
#define $b := transmit ($oikea);
#define $c := transmit ($sana);
#define $d := transmit ($n);

##  ? ($oikea.luokka in <etuliite, nimisana, laatusana, nimi_laatusana, teonsana, tavuviiva,
##                       paikannimi, sukunimi>); ### + @nimisanasta_johdettu_laatusana);
#    (($oikea.luokka = seikkasana and $oikea.tiedot /= nil) and ys_perusosa in $oikea.tiedot);

  ? ($oikea.luokka in $vasen.$i.jatko) or
    (yhdyssana in $vasen.$i.jatko) or
    ($oikea.luokka in <paikannimi, sukunimi, teonsana>);

#define $bb := transmit ("bb " + $sana);

  ? ($oikea.luokka = tavuviiva) or yhdyssana_oikein ($vasen, $oikea, $i);

#define $cc := transmit ("cc " + $sana);

  define $res := $vasen + <[alku: $sana] + $oikea>;

  if ($oikea.luokka in <nimisana, laatusana, nimi_laatusana>) then
    if (tavuviiva in $oikea.jatko and (not yhdyssana in $oikea.jatko)) then
      result $res, rules tavuviiva;
    end;
    if (yhdyssana in $oikea.jatko) then
      result $res, rules yhdyssana;
    end;
    if (omistusliite in $oikea.jatko) then
      result $res, rules omistusliite;
    end;
    if (liitesana in $oikea.jatko) then
      result $res, rules liitesana;
    end;
    if (loppu in $oikea.jatko) then
      result $res, rules loppu;
    end;
    result $res, rules sijapääte;
  end;

  if ($oikea.luokka = nimisana) then
    if (@nimisanasta_johdettu_laatusana * $oikea.jatko /= <>) then
      result $res, rules nimisanasta_johdettu_laatusana;
    end;
    if (@nimisanasta_johdettu_nimisana * $oikea.jatko /= <>) then
      result $res, rules nimisanasta_johdettu_nimisana;
    end;
    if (@nimi_laatusanan_johdin * $oikea.jatko /= <>) then
      result $res, rules nimi_laatusanan_johdin;
    end;

  elseif ($oikea.luokka = laatusana) then
    if (@nimi_laatusanan_johdin * $oikea.jatko /= <>) then
      result $res, rules nimi_laatusanan_johdin;
    end;
    if (@voittoaste + @yliaste * $oikea.jatko /= <>) then
      result $res, rules voitto_yliaste;
    end;
    if (@laatusanasta_johdettu_nimisana * $oikea.jatko /= <>) then
      result $res, rules laatusanasta_johdettu_nimisana;
    end;
  elseif ($oikea.luokka = nimi_laatusana) then
    if ((voittoaste in $oikea.jatko) or (yliaste in $oikea.jatko)) then
      result $res, rules voitto_yliaste;
    end;
    if (@laatusanasta_johdettu_nimisana * $oikea.jatko /= <>) then
      result $res, rules laatusanasta_johdettu_nimisana;
    end;
    if (@nimisanasta_johdettu_nimisana * $oikea.jatko /= <>) then
      result $res, rules nimisanasta_johdettu_nimisana;
    end;
    if (@nimi_laatusanan_johdin * $oikea.jatko /= <>) then
      result $res, rules nimi_laatusanan_johdin;
    end;
    if (@nimisanasta_johdettu_laatusana * $oikea.jatko /= <>) then
      result $res, rules nimisanasta_johdettu_laatusana;
    end;

  elseif ($oikea.luokka = teonsana) then
    ? $oikea.jatko * (@teonsanasta_johdettu_nimisana + @teonsanasta_johdettu_laatusana) /= <>;
    ? yhdyssana_oikein ($vasen, $oikea, $i);
    ? $vasen.$i.jatko * <yhdyssana, nimisana, nimi_laatusana, laatusana, etuliite> /= <>;
    result $res, rules teonsanan_johdos_nimisana, teonsanan_johdos_laatusana;

  elseif ($oikea.luokka = etuliite) then
    ? (<nimisana, nimi_laatusana, laatusana> * $oikea.jatko /= <>);
    result $res, rules yhdyssana;

  elseif ($oikea.luokka = tavuviiva) then
    result $res, rules yhdyssana, erisnimi, asemosana, apusana, lyhennesääntö, loppu;

  elseif ($oikea.luokka in <paikannimi, sukunimi>) then
    ? johdin_lAinen in $oikea.jatko;
    result $res, rules paikannimen_ja_sukunimen_lainen_johdin;
  end;
  stop;
end;
