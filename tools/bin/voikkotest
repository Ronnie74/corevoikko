#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright 2006 - 2007 Harri PitkÃ¤nen (hatapitk@iki.fi)
# Test program for Voikko spellchecker.
# This program requires Python and python-enchant.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

import sys
import locale
import enchant
import codecs
import os
import subprocess


# Set defaults
ENCODING = locale.getpreferredencoding()
TESTDIR = os.environ["HOME"] + "/svn/voikko/trunk/tests/voikkotest"
HYPHENCMD = "voikkohyphenate"
langcode = "fi_FI"


spelltest = TESTDIR + "/spell.txt"
hyphentest = TESTDIR + "/hyphen.txt"

# Returns a list of hyphenated words. Wordlist is a list of words to hyphenate and
# params is a string containing the parameters for HYPHENCMD
def _hyphenate_wordlist(wordlist, params):
	hyphenator = subprocess.Popen(HYPHENCMD + " " + params, shell = True, stdin = subprocess.PIPE,
	                              stdout = subprocess.PIPE, close_fds = True)
	for word in wordlist:
		hyphenator.stdin.write(word.encode('UTF-8') + '\n')
	(out, err) = hyphenator.communicate()
	rawlist = out.split('\n')
	hyphenatedlist = []
	for hword in rawlist:
		hyphenatedlist.append(unicode(hword, 'UTF-8'))
	return hyphenatedlist #FIXME: last item is an extra empty string


def _check_hyphens(section, expected_results, results):
	failcount = 0
	for i in range(0, len(expected_results)):
		if expected_results[i] != results[i]:
			print u'Hyphenation test failed in section "%s":' % section
			print u'  Expected "%s", got "%s"' % (expected_results[i], results[i])
			failcount = failcount + 1
	return failcount

# Initialise the spellchecker
try:
	dict = enchant.Dict(langcode)
except enchant.DictNotFoundError:
	print u"No dictionary was found for language " + langcode
	sys.exit(1)
sys.stderr.write(u"Using language " + dict.tag + u" with Enchant " + dict.provider.desc + "\n")


# Run the spelling tests
try:
	inputfile = codecs.open(spelltest, "r", ENCODING)
	testcount = 0
	failcount = 0
	linecount = 0
	section = u"(none)"
	negative_test = False
	while True:
		line_orig = inputfile.readline()
		linecount = linecount + 1
		if line_orig == u'': break
		line = line_orig.strip()
		commentstart = line.find(u"#")
		if commentstart != -1: line = line[:commentstart].strip()
		if line.startswith(u'[') and line.endswith(u']'):
			section = line[1:-1]
			continue
		if line.startswith(u'!'):
			negative_test = True
			word = line[1:]
		else:
			negative_test = False
			word = line
		testcount = testcount + 1
		if not (dict.check(word) ^ negative_test):
			print u'Spelling test failed at line %i, section "%s":\n  %s' \
			      % (linecount, section, line_orig)
			failcount = failcount + 1
	inputfile.close()
	if failcount == 0:
		print u"All %i spelling tests were successful." % testcount
	else:
		print u"%i out of %i spelling tests failed." % (failcount, testcount)
except IOError:
	sys.stderr.write("Could not read from file " + spelltest + "\n")
	sys.exit(1)

# Run the hyphenator tests
try:
	inputfile = codecs.open(hyphentest, "r", ENCODING)
	testcount = 0
	failcount = 0
	section = u"(none)"
	inputwords = []
	expresults = []
	while True:
		line_orig = inputfile.readline()
		if line_orig == u'': break
		line = line_orig.strip()
		commentstart = line.find(u"#")
		if commentstart != -1: line = line[:commentstart].strip()
		if line.startswith(u'[') and line.endswith(u']'):
			if len(inputwords) > 0:
				results = _hyphenate_wordlist(inputwords, section)
				failcount = failcount + _check_hyphens(section, expresults, results)
				inputwords = []
				expresults = []
			section = line[1:-1]
			continue
		parts = line.split()
		if len(parts) == 0: continue
		inputwords.append(parts[0].strip())
		expresults.append(parts[1].strip())
		testcount = testcount + 1
	inputfile.close()
	if len(inputwords) > 0:
		results = _hyphenate_wordlist(inputwords, section)
		failcount = failcount + _check_hyphens(section, expresults, results)
	if failcount == 0:
		print u"All %i hyphenation tests were successful." % testcount
	else:
		print u"%i out of %i hyphenation tests failed." % (failcount, testcount)
except IOError:
	sys.stderr.write("Could not read from file " + hyphentest + "\n")
	sys.exit(1)
